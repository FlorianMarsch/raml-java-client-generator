#%RAML 0.8
baseUri: http://mocksvc.mulesoft.com/mocks/72a364ec-a69e-409d-b1ae-b0bfd993a822
title: Data Gateway Designer
mediaType: application/json
version: v0.1
schemas:
  - gatewaySetup: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
          "remoteEntity" : { "type" : "string" },
          "name" : { "type" : "string" },
          "enabled" : {
                  "enum": ["true", "false"]
                },
          "properties" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "description": { "type" : "string" },
                "name": { "type" : "string" },
                "fieldName": { "type" : "string" },
                "length": { "type" : "string" },
                "nullable": { "type" : "string" },
                "type": { "type" : "string" },
                "key": {
                  "enum": ["true", "false"]
                }
              }
            }
          }
        }  
      }
      
  - importSchema: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
            "overwrite": {
                "type": "boolean"
            },
            "entities": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "entityId": {
                            "type": "number"
                        }
                    }
                }
            }
        }
      }
      
  - agent: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
          "description" : { 
            "maxLength": 100,
            "type" : "string" 
            },
          "installerId" : {  
            "type" : "integer" 
            }
          },
        "required": ["description", "installerId"]    
      }
# ------------------------------------------------------
/alive:
  displayName: health check resource
  get:
    description: Returns 200 if the app is up and running
    responses:
        200:
          body: 
            application/json:
              example: |            
                {
                  "message": "",
                  "isSuccessful": "true",
                  "data": {}
                }    
        500:
/status:
  displayName: health check resource
  get:
    description: Returns 200 if the app is up and running and a list of warnings if something is wrong or taking too long
    responses:
        200:
          body: 
            application/json:
              example: |            
                {
                  "message": "",
                  "isSuccessful": "true",
                  "data": [
                    {
                      "resource": "MySQL DB",
                      "status": "alive",
                      "timeSeconds": 5 
                    },
                    {
                      "resource": "Amazon S3",
                      "status": "alive",
                      "timeSeconds": 5 
                    },
                    {
                      "resource": "Core Services API",
                      "status": "alive",
                      "timeSeconds": 34 
                    },
                    {
                      "resource": "CH API",
                      "status": "alive",
                      "timeSeconds": 22 
                    },
                    {
                      "resource": "API Manager API",
                      "status": "dead",
                      "timeSeconds": 12 
                    },
                    {
                      "resource": "SDG Provider",
                      "status": "dead",
                      "timeSeconds": 5 
                    }
                  ]
                }    
        500:
# ------------------------------------------------------
/auth:
  displayName: authorization
  /callback:
    displayName: callback
    get:
      description: Descrive a gateway and the attributes that define it      
# ------------------------------------------------------
/login:
  displayName: Login
  post:
    description: Login through signed request
    body:
      application/x-www-form-urlencoded:
        formParameters:
          signed_request:
            description: The signed_request from Salesforce
            required: true
            type: string
  get:
    description: Login through signed request   
  # ------------------------------------------------------
  /anypoint:
    displayName: Login
    get:
      description: Login with cs token
# ------------------------------------------------------
/logout:
  displayName: Logout
  post:
    description: Logout CS Account  
    body:
      application/json:
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "data": {"url":"/login.html"},
                "isSuccessful": true,
                "message": ""
              }
      401:
        body:
          application/json: 
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "Unauthorized"
              }      
# ------------------------------------------------------
/connectivity:
  displayName: connectivity
  get:
    description: List of available connectivities
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "message": "",
                "isSuccessful": "true",
                "data": {
                  "count": 2,
                  "connectivity": [
                    {
                      "timestamp": "2015-01-08 15:41:15.0",
                      "id": "16",
                      "status": "active",
                      "description": "1",
                      "name": "test",
                      "properties": {
                        "region": "ap-northeast-1",
                        "authmeth": "PKI",
                        "ikeencalg": "3DES-CBC",
                        "netaddrspace": "3",
                        "itname": "2",
                        "chaddrspace": "2",
                        "nattrv": true,
                        "dhgrp": "1",
                        "authalg": "3DES-CBC",
                        "testendp": "2",
                        "perffordsec": false,
                        "gatewayip": "2",
                        "p1ikelife": 14,
                        "ikev": "IKEv1",
                        "encalg": "HMAC-MD5",
                        "ikeauthalg": "HMAC-MD5",
                        "p2life": 13,
                        "itphone": "321",
                        "ikedhgrp": false,
                        "exmode": "Aggressive",
                        "itemail": "3"
                      },
                      "connectivityTypeId": "1"
                    },
                    {
                      "timestamp": "2015-01-08 15:47:31.0",
                      "id": "17",
                      "status": "active",
                      "description": "1",
                      "name": "test",
                      "properties": {
                        "region": "ap-northeast-1",
                        "authmeth": "PKI",
                        "ikeencalg": "3DES-CBC",
                        "netaddrspace": "3",
                        "itname": "2",
                        "chaddrspace": "2",
                        "nattrv": true,
                        "dhgrp": "1",
                        "authalg": "3DES-CBC",
                        "testendp": "2",
                        "perffordsec": false,
                        "gatewayip": "2",
                        "p1ikelife": 14,
                        "ikev": "IKEv1",
                        "encalg": "HMAC-MD5",
                        "ikeauthalg": "HMAC-MD5",
                        "p2life": 13,
                        "itphone": "321",
                        "ikedhgrp": false,
                        "exmode": "Aggressive",
                        "itemail": "3"
                      },
                      "connectivityTypeId": "1"
                    }
                  ]
                }
              }
      401:
        body:
          application/json: 
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "You must login first"
              }
      503:
        body:
          application/json:
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "Service Unavailable"
              }
  post:
    description: Set the connectivity settings
    body:
      application/json:
        example:  |
          {
            "name": "VPC1",
            "description": "My very own VPC setup",
            "connectivityTypeId": "1",
            "draft": "false",
            "properties": {
              "specialistName": "Bart",
              "region": "North",
              "specialistEmail": "bla@mail.com"
            }
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "data": {"id":"1"},
                "isSuccessful": true,
                "message": ""
              }
      400:
        body:
          application/json: 
            example: |
              {
                "data": ["field 1 is invalid", "field 2 is invalid"],
                "isSuccessful": false,
                "message": "Validation failed"
              }  
      401:
        body:
          application/json: 
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "You must login first"
              }
      503:
        body:
          application/json:
            example: |
              {
                "data": {},
                "isSuccessful": false,
                "message": "Service Unavailable"
              } 
  /types:
    displayName: connectivityTypes
    get:
      description: List all the available connectivity types 
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "message": "",
                  "isSuccessful": "true",
                  "data": {
                    "count": 2,
                    "connectivityTypes": [
                      {
                        "id": "1",
                        "name": "IPSEC",
                        "friendlyName": "IPSec tunnel",
                        "properties": [
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "21",
                            "order": 1,
                            "maxLength": 100,
                            "helpMessage": "Name of the networking specialist in the customers IT network team",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "itname",
                            "label": "IT Network Specialist Name",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "22",
                            "order": 2,
                            "maxLength": 100,
                            "helpMessage": "Contact email address",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "itemail",
                            "label": "IT Network Specialist Email",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "23",
                            "order": 3,
                            "maxLength": 100,
                            "helpMessage": "Contact Mobile Phone. This is requested as Mulesoft utilise SMS to transfer secret keys.",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "itphone",
                            "label": "IT Network Specialist Mobile",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "24",
                            "order": 4,
                            "maxLength": 40,
                            "helpMessage": "Public IP address of the gateway(s) connecting to the CloudHub VPC. (i.e. 217.18.136.66)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "gatewayip",
                            "label": "Your External Gateway IP",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "25",
                            "order": 5,
                            "maxLength": 40,
                            "helpMessage": "The network address space for the customers network that CloudHub workers will be accessing. ",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "netaddrspace",
                            "label": "Your Internal Network Address Space",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "26",
                            "order": 6,
                            "maxLength": 40,
                            "helpMessage": "The Cloudhub Worker Address Space is a CIDR range of IP addresses that can be used for Cloudhub apps",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "chaddrspace",
                            "label": "CloudHub workers address space",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "27",
                            "order": 7,
                            "maxLength": 40,
                            "helpMessage": "The region where you want your VPC created (i.e. US East, US West, EU, Australia, Singapore, etc.)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "region",
                            "label": "Region",
                            "type": "select",
                            "required": true,
                            "options": {
                              "eu-central-1": "EU (Frankfurt)",
                              "sa-east-1": "South America (Sao Paulo)",
                              "ap-northeast-1": "Asia Pacific (Tokyo)",
                              "eu-west-1": "EU (Ireland)",
                              "us-east-1": "US East (N. Virginia)",
                              "us-west-1": "US West (N. California)",
                              "us-west-2": "US West (Oregon)",
                              "ap-southeast-2": "Asia Pacific (Sydney)",
                              "ap-southeast-1": "Asia Pacific (Singapore)"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "28",
                            "order": 8,
                            "maxLength": 40,
                            "helpMessage": "A TCP endpoint (host + port) internal to the customer's network that can be used to test comms.",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "testendp",
                            "label": "Test Endpoint",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "29",
                            "order": 9,
                            "maxLength": 40,
                            "helpMessage": "IKEv1 or IKEv2",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "ikev",
                            "label": "IKE version",
                            "type": "select",
                            "required": false,
                            "options": {
                              "IKEv2": "IKEv2",
                              "IKEv1": "IKEv1"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "30",
                            "order": 10,
                            "maxLength": 40,
                            "helpMessage": "PKI, preshared key",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "authmeth",
                            "label": "Authentication method",
                            "type": "select",
                            "required": false,
                            "options": {
                              "Preshared Key": "Preshared Key",
                              "PKI": "PKI"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "31",
                            "order": 11,
                            "maxLength": 40,
                            "helpMessage": "(i.e. AES256)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "ikeencalg",
                            "label": "IKE Encryption algorithm",
                            "type": "select",
                            "required": false,
                            "options": {
                              "Blowfish": "Blowfish",
                              "DES-CBC": "DES-CBC",
                              "AES-CBC": "AES-CBC",
                              "3DES-CBC": "3DES-CBC or Triple-DES"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "32",
                            "order": 12,
                            "maxLength": 40,
                            "helpMessage": "(i.e. hmac_sha1)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "ikeauthalg",
                            "label": "IKE Authentication algorithm",
                            "type": "select",
                            "required": false,
                            "options": {
                              "HMAC-MD5": "HMAC-MD5",
                              "HMAC-SHA-1": "HMAC-SHA-1"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "33",
                            "default": "",
                            "order": 13,
                            "maxLength": 40,
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "ikedhgrp",
                            "label": "IKE Diffie-Hellman group",
                            "type": "checkbox",
                            "required": false
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "34",
                            "default": "",
                            "order": 14,
                            "maxLength": 40,
                            "helpMessage": "(i.e. 86400 seconds)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "p1ikelife",
                            "label": "Phase1 / IKE lifetime",
                            "type": "number",
                            "required": false
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "35",
                            "default": "",
                            "order": 15,
                            "maxLength": 40,
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "nattrv",
                            "label": "Nat traversal",
                            "type": "checkbox",
                            "required": false
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "36",
                            "order": 16,
                            "maxLength": 40,
                            "helpMessage": "aggressive/main",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "exmode",
                            "label": "Exchange mode",
                            "type": "select",
                            "required": false,
                            "options": {
                              "Main": "Main",
                              "Aggressive": "Aggressive"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "37",
                            "order": 17,
                            "maxLength": 40,
                            "helpMessage": "(i.e. AES256)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "encalg",
                            "label": "Encryption algorithm",
                            "type": "select",
                            "required": false,
                            "options": {
                              "HMAC-MD5": "HMAC-MD5",
                              "HMAC-SHA-1": "HMAC-SHA-1"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "38",
                            "order": 18,
                            "maxLength": 40,
                            "helpMessage": "(i.e. hmac_sha1)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "authalg",
                            "label": "Authentication algorithm",
                            "type": "select",
                            "required": false,
                            "options": {
                              "Blowfish": "Blowfish",
                              "DES-CBC": "DES-CBC",
                              "AES-CBC": "AES-CBC",
                              "3DES-CBC": "3DES-CBC or Triple-DES"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "39",
                            "default": "",
                            "order": 19,
                            "maxLength": 40,
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "perffordsec",
                            "label": "Use Perfect Forward Secrecy",
                            "type": "checkbox",
                            "required": false
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "40",
                            "order": 20,
                            "maxLength": 40,
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "dhgrp",
                            "label": "Diffie-Hellman group",
                            "type": "select",
                            "required": false,
                            "options": {
                              "2": "2",
                              "20": "20",
                              "1": "1",
                              "5": "5",
                              "19": "19",
                              "15": "15",
                              "14": "14"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "41",
                            "default": "",
                            "order": 21,
                            "maxLength": 40,
                            "helpMessage": "(i.e. 3600 seconds)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "p2life",
                            "label": "Phase2 lifetime",
                            "type": "number",
                            "required": false
                          }
                        ],
                        "group": "IPSec tunnel"
                      },
                      {
                        "id": "2",
                        "name": "VPCPEERING",
                        "friendlyName": "VPC Peering",
                        "properties": [
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "42",
                            "order": 1,
                            "maxLength": 100,
                            "helpMessage": "Name of the networking specialist in the customers IT network team",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "itname",
                            "label": "IT Network Specialist Name",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "43",
                            "order": 2,
                            "maxLength": 100,
                            "helpMessage": "Contact email address",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "itemail",
                            "label": "IT Network Specialist Email",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "44",
                            "order": 3,
                            "maxLength": 40,
                            "helpMessage": "The Cloudhub Worker Address Space is a CIDR range of IP addresses that can be used for Cloudhub apps",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "chaddrspace",
                            "label": "CloudHub workers address space",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "45",
                            "order": 4,
                            "maxLength": 40,
                            "helpMessage": "(i.e. vpc-12345678)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "vpcid",
                            "label": "Your VPC ID",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "46",
                            "order": 5,
                            "maxLength": 40,
                            "helpMessage": "(i.e. 12345678990)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "amazonid",
                            "label": "Your Amazon Account ID",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "47",
                            "order": 6,
                            "maxLength": 40,
                            "helpMessage": "The region where you want your VPC created (i.e. US East, US West, EU, Australia, Singapore, etc)",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "region",
                            "label": "Region",
                            "type": "select",
                            "required": true,
                            "options": {
                              "eu-central-1": "EU (Frankfurt)",
                              "sa-east-1": "South America (Sao Paulo)",
                              "ap-northeast-1": "Asia Pacific (Tokyo)",
                              "eu-west-1": "EU (Ireland)",
                              "us-east-1": "US East (N. Virginia)",
                              "us-west-1": "US West (N. California)",
                              "us-west-2": "US West (Oregon)",
                              "ap-southeast-2": "Asia Pacific (Sydney)",
                              "ap-southeast-1": "Asia Pacific (Singapore)"
                            }
                          },
                          {
                            "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                            "id": "48",
                            "order": 7,
                            "maxLength": 40,
                            "helpMessage": "A TCP endpoint (host + port) internal to the customer's network that can be used to test comms",
                            "pattern": "^.*$",
                            "fieldType": "custom",
                            "name": "testendp",
                            "label": "Test Endpoint",
                            "type": "text",
                            "required": false
                          }
                        ],
                        "group": "VPC Peering"
                      }
                    ]
                  }
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /{connectivityTypeId}:
      displayName: connectivityType
      get:
        description: Describe a datasource type and the attributes that define it
        responses:
          200:
            body: 
              application/json:
                example: |            
                  {
                    "message": "",
                    "isSuccessful": "true",
                    "data": {
                    "id":"1",
                    "name":"IPSEC",
                    "friendlyName": "IPSec Tunnel",
                      "properties": [
                        {
                          "id": 1,
                          "validationRegEx": "^.*$",
                          "order": 1,
                          "validationErrorMsg": "Invalid datasource username",
                          "fieldType": "custom",
                          "mandatory": "true",
                          "name": "specialistName",
                          "friendlyName": "IT Network Specialist",
                          "valueType": "text",
                          "maxSize": 20
                        },
                        {
                          "id": 2,
                          "validationRegEx": "^.*$",
                          "order": 2,
                          "validationErrorMsg": "Invalid datasource password",
                          "fieldType": "custom",
                          "mandatory": "true",
                          "name": "specialistEmail",
                          "friendlyName": "IT Network Specialist email",
                          "valueType": "text",
                          "maxSize": 20
                        },
                        {
                          "id": 3,
                          "validationRegEx": "^[0-9]*$",
                          "order": 3,
                          "validationErrorMsg": "Your external gateway IP",
                          "fieldType": "custom",
                          "mandatory": "true",
                          "name": "externalGatewayIP",
                          "friendlyName": "External gateway IP",
                          "valueType": "text",
                          "maxSize": 6
                        },
                        {
                          "id": 4,
                          "validationRegEx": "^.*$",
                          "order": 4,
                          "validationErrorMsg": "Invalid datasource language value",
                          "fieldType": "custom",
                          "mandatory": "true",
                          "name": "internalNetworkAddressSpace",
                          "friendlyName": "Internal network address space",
                          "valueType": "text",
                          "maxSize": 2
                        },
                        {
                          "id": 5,
                          "validationRegEx": "^[0-9]*$",
                          "order": 5,
                          "validationErrorMsg": "Invalid datasource system number",
                          "fieldType": "custom",
                          "mandatory": "true",
                          "name": "region",
                          "friendlyName": "Region",
                          "valueType": "text",
                          "maxSize": 3
                        },
                        {
                          "id": 6,
                          "validationRegEx": "^.*$",
                          "order": 6,
                          "validationErrorMsg": "",
                          "fieldType": "custom",
                          "mandatory": "true",
                          "name": "selectname",
                          "friendlyName": "Super Select",
                          "valueType": "select",
                          "maxSize": 20,
                          "options": {
                            "option1": "Option 1",
                            "option2": "Option 2"
                          }
                        },
                        {
                          "id": 7,
                          "validationRegEx": "^[0-9]*$",
                          "order": 5,
                          "validationErrorMsg": "Invalid datasource system number",
                          "fieldType": "custom",
                          "mandatory": "true",
                          "name": "checkbox",
                          "friendlyName": "True/false option",
                          "valueType": "checkbox",
                          "maxSize": 1
                        }
                      ]
                    }
                  }
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": "",
                    "isSuccessful": false,
                    "message": "Validation failed"
                  }        
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
  
  # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
  /{connectivityId}:
    displayName: connectivityId
    get:
      description: Retrieves connectivity details
      responses:
        200:
         body:
            application/json:
              example: |
                {
                  "message": "",
                  "isSuccessful": "true",
                  "data": {
                    "id": "1",
                    "name": "IPSEC",
                    "friendlyName": "IPSec tunnel",
                    "properties": [
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "21",
                        "order": 1,
                        "maxLength": 100,
                        "helpMessage": "Name of the networking specialist in the customers IT network team",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "itname",
                        "label": "IT Network Specialist Name",
                        "type": "text",
                        "required": true
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "22",
                        "order": 2,
                        "maxLength": 100,
                        "helpMessage": "Contact email address",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "itemail",
                        "label": "IT Network Specialist Email",
                        "type": "text",
                        "required": true
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "23",
                        "order": 3,
                        "maxLength": 100,
                        "helpMessage": "Contact Mobile Phone. This is requested as Mulesoft utilise SMS to transfer secret keys.",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "itphone",
                        "label": "IT Network Specialist Mobile",
                        "type": "text",
                        "required": true
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "24",
                        "order": 4,
                        "maxLength": 40,
                        "helpMessage": "Public IP address of the gateway(s) connecting to the CloudHub VPC. (i.e. 217.18.136.66)",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "gatewayip",
                        "label": "Your External Gateway IP",
                        "type": "text",
                        "required": true
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "25",
                        "order": 5,
                        "maxLength": 40,
                        "helpMessage": "The network address space for the customers network that CloudHub workers will be accessing. ",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "netaddrspace",
                        "label": "Your Internal Network Address Space",
                        "type": "text",
                        "required": true
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "26",
                        "order": 6,
                        "maxLength": 40,
                        "helpMessage": "The Cloudhub Worker Address Space is a CIDR range of IP addresses that can be used for Cloudhub apps",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "chaddrspace",
                        "label": "CloudHub workers address space",
                        "type": "text",
                        "required": true
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "27",
                        "order": 7,
                        "maxLength": 40,
                        "helpMessage": "The region where you want your VPC created (i.e. US East, US West, EU, Australia, Singapore, etc.)",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "region",
                        "label": "Region",
                        "type": "select",
                        "required": true,
                        "options": {
                          "eu-central-1": "EU (Frankfurt)",
                          "sa-east-1": "South America (Sao Paulo)",
                          "ap-northeast-1": "Asia Pacific (Tokyo)",
                          "eu-west-1": "EU (Ireland)",
                          "us-east-1": "US East (N. Virginia)",
                          "us-west-1": "US West (N. California)",
                          "us-west-2": "US West (Oregon)",
                          "ap-southeast-2": "Asia Pacific (Sydney)",
                          "ap-southeast-1": "Asia Pacific (Singapore)"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "28",
                        "order": 8,
                        "maxLength": 40,
                        "helpMessage": "A TCP endpoint (host + port) internal to the customer's network that can be used to test comms.",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "testendp",
                        "label": "Test Endpoint",
                        "type": "text",
                        "required": true
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "29",
                        "order": 9,
                        "maxLength": 40,
                        "helpMessage": "IKEv1 or IKEv2",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "ikev",
                        "label": "IKE version",
                        "type": "select",
                        "required": false,
                        "options": {
                          "IKEv2": "IKEv2",
                          "IKEv1": "IKEv1"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "30",
                        "order": 10,
                        "maxLength": 40,
                        "helpMessage": "PKI, preshared key",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "authmeth",
                        "label": "Authentication method",
                        "type": "select",
                        "required": false,
                        "options": {
                          "Preshared Key": "Preshared Key",
                          "PKI": "PKI"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "31",
                        "order": 11,
                        "maxLength": 40,
                        "helpMessage": "(i.e. AES256)",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "ikeencalg",
                        "label": "IKE Encryption algorithm",
                        "type": "select",
                        "required": false,
                        "options": {
                          "Blowfish": "Blowfish",
                          "DES-CBC": "DES-CBC",
                          "AES-CBC": "AES-CBC",
                          "3DES-CBC": "3DES-CBC or Triple-DES"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "32",
                        "order": 12,
                        "maxLength": 40,
                        "helpMessage": "(i.e. hmac_sha1)",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "ikeauthalg",
                        "label": "IKE Authentication algorithm",
                        "type": "select",
                        "required": false,
                        "options": {
                          "HMAC-MD5": "HMAC-MD5",
                          "HMAC-SHA-1": "HMAC-SHA-1"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "33",
                        "default": "",
                        "order": 13,
                        "maxLength": 40,
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "ikedhgrp",
                        "label": "IKE Diffie-Hellman group",
                        "type": "checkbox",
                        "required": false
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "34",
                        "default": "",
                        "order": 14,
                        "maxLength": 40,
                        "helpMessage": "(i.e. 86400 seconds)",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "p1ikelife",
                        "label": "Phase1 / IKE lifetime",
                        "type": "number",
                        "required": false
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "35",
                        "default": "",
                        "order": 15,
                        "maxLength": 40,
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "nattrv",
                        "label": "Nat traversal",
                        "type": "checkbox",
                        "required": false
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "36",
                        "order": 16,
                        "maxLength": 40,
                        "helpMessage": "aggressive/main",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "exmode",
                        "label": "Exchange mode",
                        "type": "select",
                        "required": false,
                        "options": {
                          "Main": "Main",
                          "Aggressive": "Aggressive"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "37",
                        "order": 17,
                        "maxLength": 40,
                        "helpMessage": "(i.e. AES256)",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "encalg",
                        "label": "Encryption algorithm",
                        "type": "select",
                        "required": false,
                        "options": {
                          "HMAC-MD5": "HMAC-MD5",
                          "HMAC-SHA-1": "HMAC-SHA-1"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "38",
                        "order": 18,
                        "maxLength": 40,
                        "helpMessage": "(i.e. hmac_sha1)",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "authalg",
                        "label": "Authentication algorithm",
                        "type": "select",
                        "required": false,
                        "options": {
                          "Blowfish": "Blowfish",
                          "DES-CBC": "DES-CBC",
                          "AES-CBC": "AES-CBC",
                          "3DES-CBC": "3DES-CBC or Triple-DES"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "39",
                        "default": "",
                        "order": 19,
                        "maxLength": 40,
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "perffordsec",
                        "label": "Use Perfect Forward Secrecy",
                        "type": "checkbox",
                        "required": false
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "40",
                        "order": 20,
                        "maxLength": 40,
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "dhgrp",
                        "label": "Diffie-Hellman group",
                        "type": "select",
                        "required": false,
                        "options": {
                          "2": "2",
                          "20": "20",
                          "1": "1",
                          "5": "5",
                          "19": "19",
                          "15": "15",
                          "14": "14"
                        }
                      },
                      {
                        "errorMessage": "{ \"required\": \"Required field\", \"number\": \"Invalid value\" }",
                        "id": "41",
                        "default": "",
                        "order": 21,
                        "maxLength": 40,
                        "helpMessage": "(i.e. 3600 seconds)",
                        "pattern": "^.*$",
                        "fieldType": "custom",
                        "name": "p2life",
                        "label": "Phase2 lifetime",
                        "type": "number",
                        "required": false
                      }
                    ],
                    "group": "IPSec tunnel"
                  }
                }                 
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
        404:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Gateway not found"
                }     
    # *****************************************************
    put:
      description: Updates the gateway resource
      body:
        application/json:
          example: |
            {
              "name": "VPC1",
              "description": "My very own VPC setup",
              "connectivityTypeId": "1",
              "draft": "false",
              "properties": {
                "specialistName": "Bart",
                "region": "North",
                "specialistEmail": "bla@mail.com"
              }
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {},
                  "isSuccessful": true,
                  "message": ""
                }
        400:
          body:
            application/json: 
              example: |
                {
                  "data": ["field 1 is invalid", "field 2 is invalid"],
                  "isSuccessful": false,
                  "message": "Validation failed"
                } 
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }           
    # *****************************************************
    delete:
      description: Allows you to delete a connectivity definition
      responses:
        202:
          body:
            application/json:
              example: |
                {
                  "data": {},
                  "isSuccessful": true,
                  "message": ""
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }                
# ------------------------------------------------------
/datasources:
  displayName: datasources
  get:
    description: List of datasources
    queryParameters:
      search:
        displayName: SearchTerm
        type: string
        description: Search Term
        example: bla
        minLength: 2
        required: false
      gatewayType:
        displayName: relatedGatewayType 
        type: number
        description: related gatewayType 
        example: 1
        minimum: 0
        required: false  
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "message": "",
                "isSuccessful": "true",
                "data": {
                  "datasources": [
                    {
                      "id": "1",
                      "name": "Example Datasource",
                      "description": "This is a datasource to expose blah data",
                      "datasourceTypeId": "1",
                      "draft":"false",
                      "sdg": {
                        "enabled": true,
                        "agentId": 1
                      },
                      "properties": {
                        "address":"my-domain.com",
                        "port": "80",
                        "user": "a_user_name",
                        "password": "a_password",
                        "idocProgramId":"idoc_receive",
                        "jco1":"iamafile.jar",
                        "jco2":"file1.jar",
                        "jco3":"anotherfile.log"
                      }
                    },
                    {
                      "id": "2",
                      "name": "Example Datasource 2",
                      "description": "This is a datasource to expose blah data",
                      "datasourceTypeId": "1",
                      "sdg": {
                        "enabled": false,
                        "agentId": null
                      },
                      "draft":"false",
                      "properties": {
                        "address":"my-domain.com",
                        "port": "80",
                        "user": "a_user_name",
                        "password": "a_password",
                        "idocProgramId":"idoc_receive",
                        "jco1":"iamafile.jar",
                        "jco2":"file1.jar",
                        "jco3":"anotherfile.log" 
                      }
                    }
                  ]
                }
              }
      401:
        body:
          application/json: 
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "You must login first"
              }
      503:
        body:
          application/json:
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "Service Unavailable"
              }
  post:
    description: Set the gateway initial setup
    body:
      application/json:
        example:  |
          {
            "name": "SAP Datasource",
            "description": "This is a datasource to expose SAP data",
            "datasourceTypeId": "1",
            "draft": "false",
            "sdg": {
              "agentId": 3,
              "enabled": true
              },
            "properties": {
              "address": "123.238.245.8",
              "client": "800",
              "username": "ECC1430",
              "password": "mulePass!!",
              "lang":"EN",
              "sysnr":"14"
            }
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "data": {"id":"1"},
                "isSuccessful": true,
                "message": ""
              }
      400:
        body:
          application/json: 
            example: |
              {
                "data": ["field 1 is invalid", "field 2 is invalid"],
                "isSuccessful": false,
                "message": "Validation failed"
              }  
      401:
        body:
          application/json: 
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "You must login first"
              }
      503:
        body:
          application/json:
            example: |
              {
                "data": {},
                "isSuccessful": false,
                "message": "Service Unavailable"
              } 
  # ------------------------------------------------------
  /validate:
    /name:
      displayName: validates the name for uniqueness  
      post:
        description: Validates the datasource name
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "validate" : { 
                    "maxLength": 45,
                    "type" : "string" 
                    }
                  },
                "required": ["validate"]  
              }
            example: |
              {
                "validate": "DatasourceName"
              }
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "data": {
                      "valid": true
                    },
                    "isSuccessful": true,
                    "message": ""
                  }
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Validation failed"
                  } 
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  } 
  # ------------------------------------------------------  
  /types:
    displayName: datasourceTypes
    get:
      description: List all the available datasource types 
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "message": "",
                  "isSuccessful": "true",
                  "data": {
                    "count": 8,
                    "datasourceTypes": [
                      {
                        "id": "1",
                        "enabled": true,
                        "name": "SAP",
                        "friendlyName": "SAP",
                        "properties": [
                          {
                            "errorMessage": "Invalid Address format",
                            "id": "1",
                            "order": 5,
                            "maxLength": 100,
                            "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$)|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                            "fieldType": "custom",
                            "placeholder": "ex. 120.10.16.10",
                            "name": "address",
                            "label": "Host Address",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid datasource username",
                            "id": "2",
                            "order": 6,
                            "maxLength": 20,
                            "pattern": "^(\\w{1,20}){1}$",
                            "fieldType": "custom",
                            "placeholder": "SAP username",
                            "name": "username",
                            "label": "Username",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid datasource password",
                            "id": "3",
                            "order": 7,
                            "maxLength": 20,
                            "pattern": "^([\\s\\S]{1,20})$",
                            "fieldType": "custom",
                            "placeholder": "SAP password",
                            "name": "password",
                            "label": "Password",
                            "type": "password",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid datasource client number",
                            "id": "4",
                            "default": "",
                            "order": 10,
                            "maxLength": 6,
                            "pattern": "^[0-9]{1,6}$",
                            "fieldType": "custom",
                            "placeholder": "Client Number - found on SAP login screen",
                            "name": "client",
                            "label": "Client Number",
                            "type": "number",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid datasource language value",
                            "id": "5",
                            "typeahead": "SR,ZH,TH,KO,RO,SL,HR,MS,UK,ET,AR,HE,CS,DE,EN,FR,EL,HU,IT,JA,DA,PL,ZF,NL,NO,PT,SK,RU,ES,TR,FI,SV,BG,LT,LV,Z1,AF,IS,CA,SH,ID",
                            "order": 9,
                            "maxLength": 2,
                            "pattern": "^([a-z]|[A-Z]){2}$",
                            "fieldType": "custom",
                            "placeholder": "ex. English = \"EN\"",
                            "name": "lang",
                            "label": "Language",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid datasource system number",
                            "id": "6",
                            "default": "",
                            "order": 8,
                            "maxLength": 3,
                            "pattern": "^[0-9]{1,3}$",
                            "fieldType": "custom",
                            "placeholder": "System Number - found on SAP login screen",
                            "name": "sysnr",
                            "label": "Sys Number",
                            "type": "number",
                            "required": true
                          },
                          {
                            "id": "7",
                            "order": 14,
                            "maxLength": 50,
                            "helpMessage": "SAP IDOC Class Library, e. g. sapidoc-3.0.7.jar (for Linux)",
                            "pattern": "^(sapidoc-)(\\w.*)(.jar)",
                            "accept": ".jar",
                            "fieldType": "custom",
                            "name": "jco1",
                            "label": "SAP IDoc JCo Library (sapidoc-x.jar)",
                            "type": "file",
                            "required": true
                          },
                          {
                            "id": "8",
                            "order": 15,
                            "maxLength": 50,
                            "helpMessage": "SAP JCo Library (suitable for your operation system), e. g. sapjco-3.0.7.jar (for Linux)",
                            "pattern": "^(sapjco-)(\\w.*)(.jar)",
                            "accept": ".jar",
                            "fieldType": "custom",
                            "name": "jco2",
                            "label": "SAP JCo Library (sapjco-x.jar)",
                            "type": "file",
                            "required": true
                          },
                          {
                            "id": "9",
                            "order": 16,
                            "maxLength": 50,
                            "helpMessage": "SAP JCo Native Library (suitable for your operation system), e. g. libsapjco3.so (for Linux)",
                            "pattern": "^(libsapjco-)(\\w.*)(.jar)",
                            "accept": ".so",
                            "fieldType": "custom",
                            "name": "jco3",
                            "label": "SAP JCo Native Library (libsapjco-x.so)",
                            "type": "file",
                            "required": true
                          },
                          {
                            "id": "20",
                            "order": 1,
                            "fieldType": "custom",
                            "name": "label1",
                            "label": "Connection Details",
                            "type": "title",
                            "required": false
                          },
                          {
                            "id": "23",
                            "feedback": true,
                            "errorMessage": "{  \"required\": \"Name is mandatory\", \"validationurl\": \"That name is already in use\" }",
                            "maxLength": 100,
                            "order": 2,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "placeholder": "Name your Connection",
                            "fieldType": "custom",
                            "name": "name",
                            "label": "Name",
                            "required": true,
                            "type": "text",
                            "validationUrl": "/api/datasources/validate/name"
                          },
                          {
                            "id": "24",
                            "order": 3,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Enter notes to describe connection (optional)",
                            "name": "description",
                            "label": "Description",
                            "type": "text",
                            "required": false
                          },
                          {
                            "id": "29",
                            "order": 4,
                            "fieldType": "custom",
                            "name": "label2",
                            "label": "Connection & Security",
                            "type": "title",
                            "required": false
                          }
                        ],
                        "group": "SAP"
                      },
                      {
                        "id": "2",
                        "enabled": true,
                        "name": "MySQL",
                        "friendlyName": "MySQL",
                        "properties": [
                          {
                            "errorMessage": "The host is missing",
                            "id": "10",
                            "order": 5,
                            "maxLength": 120,
                            "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$)|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                            "fieldType": "custom",
                            "placeholder": "ex. 120.10.16.10",
                            "name": "host",
                            "label": "Host Address",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Port",
                            "id": "12",
                            "default": "",
                            "order": 6,
                            "maxLength": 6,
                            "pattern": "^0*(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])$",
                            "fieldType": "custom",
                            "placeholder": "Port number",
                            "name": "port",
                            "label": "Port",
                            "type": "number",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Schema name",
                            "id": "13",
                            "order": 7,
                            "maxLength": 45,
                            "pattern": "^([\\s\\S]{1,45})$",
                            "fieldType": "custom",
                            "placeholder": "Enter schema",
                            "name": "schema",
                            "label": "Schema",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB username",
                            "id": "14",
                            "order": 8,
                            "maxLength": 20,
                            "pattern": "^(\\w{1,20}){1}$",
                            "fieldType": "custom",
                            "placeholder": "DB username",
                            "name": "user",
                            "label": "Username",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Password",
                            "id": "15",
                            "order": 9,
                            "maxLength": 30,
                            "pattern": "^([\\s\\S]{1,30})$",
                            "fieldType": "custom",
                            "placeholder": "DB password",
                            "name": "password",
                            "label": "Password",
                            "type": "password",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid value, true or false expected",
                            "id": "16",
                            "default": "",
                            "order": 11,
                            "maxLength": 5,
                            "pattern": "^true|TRUE|false|FALSE&",
                            "fieldType": "custom",
                            "name": "requireSSL",
                            "label": "Require SSL?",
                            "type": "checkbox",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid value, true or false expected",
                            "id": "17",
                            "default": "",
                            "order": 12,
                            "maxLength": 5,
                            "pattern": "^true|TRUE|false|FALSE&",
                            "fieldType": "custom",
                            "name": "verifyServerCertificate",
                            "label": "Verify Server Certificate?",
                            "type": "checkbox",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid value, true or false expected",
                            "id": "18",
                            "default": "",
                            "order": 10,
                            "maxLength": 5,
                            "pattern": "^true|TRUE|false|FALSE&",
                            "fieldType": "custom",
                            "name": "useSSL",
                            "label": "Use SSL?",
                            "type": "checkbox",
                            "required": true
                          },
                          {
                            "id": "25",
                            "order": 1,
                            "fieldType": "custom",
                            "name": "label1",
                            "label": "Connection Details",
                            "type": "title",
                            "required": false
                          },
                          {
                            "id": "26",
                            "feedback": true,
                            "errorMessage": "{  \"required\": \"Name is mandatory\", \"validationurl\": \"That name is already in use\" }",
                            "maxLength": 100,
                            "order": 2,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "placeholder": "Name your Connection",
                            "fieldType": "custom",
                            "name": "name",
                            "label": "Name",
                            "required": true,
                            "type": "text",
                            "validationUrl": "/api/datasources/validate/name"
                          },
                          {
                            "id": "27",
                            "order": 3,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Enter notes to describe connection (optional)",
                            "name": "description",
                            "label": "Description",
                            "type": "text",
                            "required": false
                          },
                          {
                            "id": "28",
                            "order": 4,
                            "fieldType": "custom",
                            "name": "label2",
                            "label": "Connection & Security",
                            "type": "title",
                            "required": false
                          }
                        ],
                        "group": "MySQL"
                      },
                      {
                        "id": "3",
                        "enabled": true,
                        "name": "Oracle",
                        "friendlyName": "Oracle DB",
                        "properties": [
                          {
                            "id": "31",
                            "order": 1,
                            "fieldType": "custom",
                            "name": "label1",
                            "label": "Connection Details",
                            "type": "title",
                            "required": false
                          },
                          {
                            "id": "32",
                            "feedback": true,
                            "errorMessage": "{  \"required\": \"Name is mandatory\", \"validationurl\": \"That name is already in use\" }",
                            "maxLength": 100,
                            "order": 2,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "placeholder": "Name your Connection",
                            "fieldType": "custom",
                            "name": "name",
                            "label": "Name",
                            "required": true,
                            "type": "text",
                            "validationUrl": "/api/datasources/validate/name"
                          },
                          {
                            "id": "33",
                            "order": 3,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Enter notes to describe connection (optional)",
                            "name": "description",
                            "label": "Description",
                            "type": "text",
                            "required": false
                          },
                          {
                            "id": "34",
                            "order": 4,
                            "fieldType": "custom",
                            "name": "label2",
                            "label": "Connection & Security",
                            "type": "title",
                            "required": false
                          },
                          {
                            "errorMessage": "The host is missing",
                            "id": "35",
                            "order": 5,
                            "maxLength": 120,
                            "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$)|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                            "fieldType": "custom",
                            "placeholder": "ex. 120.10.16.10",
                            "name": "host",
                            "label": "Host Address",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Port",
                            "id": "36",
                            "default": "",
                            "order": 6,
                            "maxLength": 6,
                            "pattern": "^0*(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])$",
                            "fieldType": "custom",
                            "placeholder": "Port number",
                            "name": "port",
                            "label": "Port",
                            "type": "number",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Schema name",
                            "id": "37",
                            "order": 8,
                            "maxLength": 45,
                            "pattern": "^([\\s\\S]{1,45})$",
                            "fieldType": "custom",
                            "placeholder": "Enter schema",
                            "name": "schema",
                            "label": "Schema",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB username",
                            "id": "38",
                            "order": 9,
                            "maxLength": 20,
                            "pattern": "^(\\w{1,20}){1}$",
                            "fieldType": "custom",
                            "placeholder": "DB username",
                            "name": "user",
                            "label": "Username",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Password",
                            "id": "39",
                            "order": 10,
                            "maxLength": 30,
                            "pattern": "^([\\s\\S]{1,30})$",
                            "fieldType": "custom",
                            "placeholder": "DB password",
                            "name": "password",
                            "label": "Password",
                            "type": "password",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Service ID",
                            "id": "79",
                            "order": 7,
                            "maxLength": 45,
                            "pattern": "^(([0-9]|[aA-zZ])(-|_)*){3,10}$",
                            "fieldType": "custom",
                            "placeholder": "Enter SID",
                            "name": "sid",
                            "label": "Service ID",
                            "type": "text",
                            "required": true
                          }
                        ],
                        "group": "Oracle DB"
                      },
                      {
                        "id": "4",
                        "enabled": true,
                        "name": "MSSQL",
                        "friendlyName": "MS SQL",
                        "properties": [
                          {
                            "id": "43",
                            "order": 1,
                            "fieldType": "custom",
                            "name": "label1",
                            "label": "Connection Details",
                            "type": "title",
                            "required": false
                          },
                          {
                            "errorMessage": "Name is mandatory",
                            "id": "44",
                            "order": 2,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Name your Connection",
                            "name": "name",
                            "label": "Name",
                            "type": "text",
                            "required": true
                          },
                          {
                            "id": "45",
                            "order": 3,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Enter notes to describe connection (optional)",
                            "name": "description",
                            "label": "Description",
                            "type": "text",
                            "required": false
                          },
                          {
                            "id": "46",
                            "order": 4,
                            "fieldType": "custom",
                            "name": "label2",
                            "label": "Connection & Security",
                            "type": "title",
                            "required": false
                          },
                          {
                            "errorMessage": "The host is missing",
                            "id": "47",
                            "order": 5,
                            "maxLength": 120,
                            "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$)|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                            "fieldType": "custom",
                            "placeholder": "ex. 120.10.16.10",
                            "name": "host",
                            "label": "Host Address",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Port",
                            "id": "48",
                            "default": "",
                            "order": 6,
                            "maxLength": 6,
                            "pattern": "^0*(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])$",
                            "fieldType": "custom",
                            "placeholder": "Port number",
                            "name": "port",
                            "label": "Port",
                            "type": "number",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Schema name",
                            "id": "49",
                            "order": 8,
                            "maxLength": 45,
                            "pattern": "^([\\s\\S]{1,45})$",
                            "fieldType": "custom",
                            "placeholder": "Enter schema",
                            "name": "schema",
                            "label": "Schema",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB username",
                            "id": "50",
                            "order": 9,
                            "maxLength": 20,
                            "pattern": "^(\\w{1,20}){1}$",
                            "fieldType": "custom",
                            "placeholder": "DB username",
                            "name": "user",
                            "label": "Username",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Password",
                            "id": "51",
                            "order": 10,
                            "maxLength": 30,
                            "pattern": "^([\\s\\S]{1,30})$",
                            "fieldType": "custom",
                            "placeholder": "DB password",
                            "name": "password",
                            "label": "Password",
                            "type": "password",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Name",
                            "id": "52",
                            "order": 7,
                            "maxLength": 45,
                            "pattern": "^([\\s\\S]{1,45})$",
                            "fieldType": "custom",
                            "placeholder": "DB Name",
                            "name": "databaseName",
                            "label": "Database Name",
                            "type": "text",
                            "required": true
                          }
                        ],
                        "group": "MS SQL"
                      },
                      {
                        "id": "5",
                        "enabled": true,
                        "name": "DB2",
                        "friendlyName": "DB2",
                        "properties": [
                          {
                            "id": "55",
                            "order": 1,
                            "fieldType": "custom",
                            "name": "label1",
                            "label": "Connection Details",
                            "type": "title",
                            "required": false
                          },
                          {
                            "errorMessage": "Name is mandatory",
                            "id": "56",
                            "order": 2,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Name your Connection",
                            "name": "name",
                            "label": "Name",
                            "type": "text",
                            "required": true
                          },
                          {
                            "id": "57",
                            "order": 3,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Enter notes to describe connection (optional)",
                            "name": "description",
                            "label": "Description",
                            "type": "text",
                            "required": false
                          },
                          {
                            "id": "58",
                            "order": 4,
                            "fieldType": "custom",
                            "name": "label2",
                            "label": "Connection & Security",
                            "type": "title",
                            "required": false
                          },
                          {
                            "errorMessage": "The host is missing",
                            "id": "59",
                            "order": 5,
                            "maxLength": 120,
                            "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$)|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                            "fieldType": "custom",
                            "placeholder": "ex. 120.10.16.10",
                            "name": "host",
                            "label": "Host Address",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Port",
                            "id": "60",
                            "default": "",
                            "order": 6,
                            "maxLength": 6,
                            "pattern": "^0*(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])$",
                            "fieldType": "custom",
                            "placeholder": "Port number",
                            "name": "port",
                            "label": "Port",
                            "type": "number",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Schema name",
                            "id": "61",
                            "order": 8,
                            "maxLength": 45,
                            "pattern": "^([\\s\\S]{1,45})$",
                            "fieldType": "custom",
                            "placeholder": "Enter schema",
                            "name": "schema",
                            "label": "Schema",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB username",
                            "id": "62",
                            "order": 9,
                            "maxLength": 20,
                            "pattern": "^(\\w{1,20}){1}$",
                            "fieldType": "custom",
                            "placeholder": "DB username",
                            "name": "user",
                            "label": "Username",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Password",
                            "id": "63",
                            "order": 10,
                            "maxLength": 30,
                            "pattern": "^([\\s\\S]{1,30})$",
                            "fieldType": "custom",
                            "placeholder": "DB password",
                            "name": "password",
                            "label": "Password",
                            "type": "password",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Name",
                            "id": "64",
                            "order": 7,
                            "maxLength": 45,
                            "pattern": "^([\\s\\S]{1,45})$",
                            "fieldType": "custom",
                            "placeholder": "DB Name",
                            "name": "databaseName",
                            "label": "Database Name",
                            "type": "text",
                            "required": true
                          }
                        ],
                        "group": "DB2"
                      },
                      {
                        "id": "6",
                        "enabled": false,
                        "name": "PostgreSQL",
                        "friendlyName": "PostgreSQL",
                        "properties": [
                          {
                            "id": "67",
                            "order": 1,
                            "fieldType": "custom",
                            "name": "label1",
                            "label": "Connection Details",
                            "type": "title",
                            "required": false
                          },
                          {
                            "errorMessage": "Name is mandatory",
                            "id": "68",
                            "order": 2,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Name your Connection",
                            "name": "name",
                            "label": "Name",
                            "type": "text",
                            "required": true
                          },
                          {
                            "id": "69",
                            "order": 3,
                            "maxLength": 100,
                            "pattern": "^([\\s\\S]{1,100})$",
                            "fieldType": "custom",
                            "placeholder": "Enter notes to describe connection (optional)",
                            "name": "description",
                            "label": "Description",
                            "type": "text",
                            "required": false
                          },
                          {
                            "id": "70",
                            "order": 4,
                            "fieldType": "custom",
                            "name": "label2",
                            "label": "Connection & Security",
                            "type": "title",
                            "required": false
                          },
                          {
                            "errorMessage": "The host is missing",
                            "id": "71",
                            "order": 5,
                            "maxLength": 120,
                            "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$)|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                            "fieldType": "custom",
                            "placeholder": "ex. 120.10.16.10",
                            "name": "host",
                            "label": "Host Address",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Port",
                            "id": "72",
                            "default": "",
                            "order": 6,
                            "maxLength": 6,
                            "pattern": "^0*(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])$",
                            "fieldType": "custom",
                            "placeholder": "Port number",
                            "name": "port",
                            "label": "Port",
                            "type": "number",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Schema name",
                            "id": "73",
                            "order": 7,
                            "maxLength": 45,
                            "pattern": "^([\\s\\S]{1,45})$",
                            "fieldType": "custom",
                            "placeholder": "Enter schema",
                            "name": "schema",
                            "label": "Schema",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB username",
                            "id": "74",
                            "order": 8,
                            "maxLength": 20,
                            "pattern": "^(\\w{1,20}){1}$",
                            "fieldType": "custom",
                            "placeholder": "DB username",
                            "name": "user",
                            "label": "Username",
                            "type": "text",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid DB Password",
                            "id": "75",
                            "order": 9,
                            "maxLength": 30,
                            "pattern": "^([\\s\\S]{1,30})$",
                            "fieldType": "custom",
                            "placeholder": "DB password",
                            "name": "password",
                            "label": "Password",
                            "type": "password",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid value, true or false expected",
                            "id": "76",
                            "default": "",
                            "order": 10,
                            "maxLength": 5,
                            "helpMessage": "(i.e. true / false)",
                            "pattern": "^true|TRUE|false|FALSE&",
                            "fieldType": "custom",
                            "name": "useSSL",
                            "label": "Use SSL?",
                            "type": "checkbox",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid value, true or false expected",
                            "id": "77",
                            "default": "",
                            "order": 11,
                            "maxLength": 5,
                            "helpMessage": "(i.e. true / false)",
                            "pattern": "^true|TRUE|false|FALSE&",
                            "fieldType": "custom",
                            "name": "requireSSL",
                            "label": "Require SSL?",
                            "type": "checkbox",
                            "required": true
                          },
                          {
                            "errorMessage": "Invalid value, true or false expected",
                            "id": "78",
                            "default": "",
                            "order": 12,
                            "maxLength": 5,
                            "helpMessage": "(i.e. true / false)",
                            "pattern": "^true|TRUE|false|FALSE&",
                            "fieldType": "custom",
                            "name": "verifyServerCertificate",
                            "label": "Verify Server Certificate?",
                            "type": "checkbox",
                            "required": true
                          }
                        ],
                        "group": "PostgreSQL"
                      },
                      {
                        "id": "7",
                        "enabled": false,
                        "name": "EBS",
                        "friendlyName": "Oracle EBS",
                        "properties": [],
                        "group": "Oracle EBS"
                      },
                      {
                        "id": "8",
                        "enabled": false,
                        "name": "Siebel",
                        "friendlyName": "Siebel",
                        "properties": [],
                        "group": "Siebel"
                      }
                    ]
                  }
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
    /groups:
      displayName: datasourceTypes groups
      get:
        description: List all the available datasource types grouped by supertype
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "message":"",
                    "isSuccessful":"true",
                    "data":{
                      "count":5,
                      "datasourceTypeGroups":
                      [
                        {
                          "id":"1",
                          "count":3,
                          "description":"Application",
                          "name":"Application",
                          "datasourceTypes":
                          [
                            {"id":"1","enabled":true,"order":1,"name":"SAP","friendlyName":"SAP"},
                            {"id":"7","enabled":false,"order":2,"name":"EBS","friendlyName":"Oracle EBS"},
                            {"id":"8","enabled":false,"order":3,"name":"Siebel","friendlyName":"Siebel"}
                          ]
                        },
                        {
                          "id":"2",
                          "count":5,
                          "description":"Database",
                          "name":"Database",
                          "datasourceTypes":
                          [
                            {
                              "id":"2",
                              "enabled":true,
                              "order":4,
                              "name":"MySQL",
                              "friendlyName":"MySQL"
                            },
                            {
                              "id":"3",
                              "enabled":true,
                              "order":1,
                              "name":"Oracle",
                              "friendlyName":"Oracle DB"
                            },
                            {
                              "id":"4",
                              "enabled":true,
                              "order":2,
                              "name":"MSSQL",
                              "friendlyName":"MS SQL"
                            },
                            {
                              "id":"5",
                              "enabled":true,
                              "order":3,
                              "name":"DB2",
                              "friendlyName":"DB2"
                            },
                            {
                              "id":"6",
                              "enabled":false,
                              "order":5,
                              "name":"PostgreSQL",
                              "friendlyName":"PostgreSQL"
                            }
                          ]
                        }
                      ]
                    }
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }            
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /{datasourceTypeId}:
      displayName: datasourceType
      get:
        description: Describe a datasource type and the attributes that define it
        responses:
          200:
            body: 
              application/json:
                example: |            
                  {
                    "message": "",
                    "isSuccessful": "true",
                    "data": {
                      "id": "1",
                      "enabled": true,
                      "name": "SAP",
                      "friendlyName": "SAP",
                      "properties": [
                        {
                          "errorMessage": "Invalid Address format",
                          "id": "1",
                          "order": 5,
                          "maxLength": 100,
                          "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$)|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                          "fieldType": "custom",
                          "placeholder": "ex. 120.10.16.10",
                          "name": "address",
                          "label": "Host Address",
                          "type": "text",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid datasource username",
                          "id": "2",
                          "order": 6,
                          "maxLength": 20,
                          "pattern": "^(\\w{1,20}){1}$",
                          "fieldType": "custom",
                          "placeholder": "SAP username",
                          "name": "username",
                          "label": "Username",
                          "type": "text",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid datasource password",
                          "id": "3",
                          "order": 7,
                          "maxLength": 20,
                          "pattern": "^([\\s\\S]{1,20})$",
                          "fieldType": "custom",
                          "placeholder": "SAP password",
                          "name": "password",
                          "label": "Password",
                          "type": "password",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid datasource client number",
                          "id": "4",
                          "default": "",
                          "order": 10,
                          "maxLength": 6,
                          "pattern": "^[0-9]{1,6}$",
                          "fieldType": "custom",
                          "placeholder": "Client Number - found on SAP login screen",
                          "name": "client",
                          "label": "Client Number",
                          "type": "number",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid datasource language value",
                          "id": "5",
                          "typeahead": "SR,ZH,TH,KO,RO,SL,HR,MS,UK,ET,AR,HE,CS,DE,EN,FR,EL,HU,IT,JA,DA,PL,ZF,NL,NO,PT,SK,RU,ES,TR,FI,SV,BG,LT,LV,Z1,AF,IS,CA,SH,ID",
                          "order": 9,
                          "maxLength": 2,
                          "pattern": "^([a-z]|[A-Z]){2}$",
                          "fieldType": "custom",
                          "placeholder": "ex. English = \"EN\"",
                          "name": "lang",
                          "label": "Language",
                          "type": "text",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid datasource system number",
                          "id": "6",
                          "default": "",
                          "order": 8,
                          "maxLength": 3,
                          "pattern": "^[0-9]{1,3}$",
                          "fieldType": "custom",
                          "placeholder": "System Number - found on SAP login screen",
                          "name": "sysnr",
                          "label": "Sys Number",
                          "type": "number",
                          "required": true
                        },
                        {
                          "id": "7",
                          "order": 14,
                          "maxLength": 50,
                          "helpMessage": "SAP IDOC Class Library, e. g. sapidoc-3.0.7.jar (for Linux)",
                          "pattern": "^(sapidoc-)(\\w.*)(.jar)",
                          "accept": ".jar",
                          "fieldType": "custom",
                          "name": "jco1",
                          "label": "SAP IDoc JCo Library (sapidoc-x.jar)",
                          "type": "file",
                          "required": true
                        },
                        {
                          "id": "8",
                          "order": 15,
                          "maxLength": 50,
                          "helpMessage": "SAP JCo Library (suitable for your operation system), e. g. sapjco-3.0.7.jar (for Linux)",
                          "pattern": "^(sapjco-)(\\w.*)(.jar)",
                          "accept": ".jar",
                          "fieldType": "custom",
                          "name": "jco2",
                          "label": "SAP JCo Library (sapjco-x.jar)",
                          "type": "file",
                          "required": true
                        },
                        {
                          "id": "9",
                          "order": 16,
                          "maxLength": 50,
                          "helpMessage": "SAP JCo Native Library (suitable for your operation system), e. g. libsapjco3.so (for Linux)",
                          "pattern": "^(libsapjco-)(\\w.*)(.jar)",
                          "accept": ".so",
                          "fieldType": "custom",
                          "name": "jco3",
                          "label": "SAP JCo Native Library (libsapjco-x.so)",
                          "type": "file",
                          "required": true
                        },
                        {
                          "id": "20",
                          "order": 1,
                          "fieldType": "custom",
                          "name": "label1",
                          "label": "Connection Details",
                          "type": "title",
                          "required": false
                        },
                        {
                          "errorMessage": { 
                            "required": "Name is mandatory", 
                            "validationurl": "That name is already in use"
                          },
                          "id": "23",
                          "order": 2,
                          "maxLength": 100,
                          "pattern": "^([\\s\\S]{1,100})$",
                          "fieldType": "custom",
                          "placeholder": "Name your Connection",
                          "name": "name",
                          "label": "Name",
                          "type": "text",
                          "required": true,
                          "feedback": true,
                          "validationUrl": "/api/datasources/validate/name"
                        },
                        {
                          "id": "24",
                          "order": 3,
                          "maxLength": 100,
                          "pattern": "^([\\s\\S]{1,100})$",
                          "fieldType": "custom",
                          "placeholder": "Enter notes to describe connection (optional)",
                          "name": "description",
                          "label": "Description",
                          "type": "text",
                          "required": false
                        },
                        {
                          "id": "29",
                          "order": 4,
                          "fieldType": "custom",
                          "name": "label2",
                          "label": "Connection & Security",
                          "type": "title",
                          "required": false
                        }
                      ],
                      "group": "SAP"
                    }
                  }
                
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": "",
                    "isSuccessful": false,
                    "message": "Validation failed"
                  }        
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
  # -----------------------------------------------------------------------------------------------  
  /test:
    displayName: test datasource connection
    post:
      description: test datasource connection
      body:
        application/json:
          schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "host" : { 
                    "maxLength": 255,
                    "type" : "string" 
                    },
                  "port" : { 
                    "maxLength": 10,
                    "type" : "number" 
                    },
                  "sysnr" : { 
                    "maxLength": 10,
                    "type" : "number" 
                    },
                  "requireSSL" : { 
                    "type": "boolean"
                    }
                  },
                "required": ["host", "requireSSL"] 
              }
          example:  |
            {
              "host": "hydra.cxt8ykwdbwg2.us-east-1.rds.amazonaws.com",
              "port": "3306"
              }
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {},
                  "isSuccessful": true,
                  "message": ""
                }
        400:
          body:
            application/json: 
              example: |
                {
                  "data": {},
                  "isSuccessful": false,
                  "message": "Unable to resolve address: hydra-sql-test.cxt8ykwdbwg2.us-east-1.rds.amazonws.com"
                }  
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
        503:
          body:
            application/json:
              example: |
                {
                  "data": {},
                  "isSuccessful": false,
                  "message": "Service Unavailable"
                }  
  # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
  /{datasourceId}:
    displayName: datasourceId
    get:
      description: Retrieves Datasource details
      responses:
        200:
         body:
            application/json:
              example: |
                {
                "data": {
                  "id": "1",
                  "name": "Example Datasource",
                  "description": "This is a datasource to expose blah data",
                  "datasourceTypeId": "1",
                  "sdg": {
                        "enabled": true,
                        "agentId": 2
                    },                  
                  "draft":"false",
                  "properties": {
                    "address":"my-domain.com",
                    "port": "80",
                    "user": "a_user_name",
                    "password": "a_password",
                    "idocProgramId":"idoc_receive",
                    "selectname": "option2",
                    "checkbox": true,
                    "jco1":"iamafile.jar",
                    "jco2":"file1.jar",
                    "jco3":"anotherfile.log" 
                  }
                },
                "isSuccessful": true,
                "message": ""
                }                 
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
        404:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Gateway not found"
                }     
    # *****************************************************
    put:
      description: Updates the gateway resource
      body:
        application/json:
          example: |
            {
            "name": "Example Datasource 2",
            "description": "This is a datasource to expose blah data",
            "datasourceTypeId": "datasource_type_id",
            "sdg": {
              "agentId": 3,
              "enabled": true
              },
            "draft":"false",
            "properties": {
              "address":"my-domain.com",
              "port": "80",
              "user": "a_user_name",
              "password": "a_password",
              "idocProgramId":"idoc_receive" 
              }
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {},
                  "isSuccessful": true,
                  "message": ""
                }
        400:
          body:
            application/json: 
              example: |
                {
                  "data": ["field 1 is invalid", "field 2 is invalid"],
                  "isSuccessful": false,
                  "message": "Validation failed"
                } 
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
    # *****************************************************
    delete:
      description: Allows you to delete (unpublish and deactivate) a gateway
      responses:
        202:
          body:
            application/json:
              example: |
                {
                  "data": {},
                  "isSuccessful": true,
                  "message": ""
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
    # ------------------------------------------------------
    /files:
      displayName: files
      post:
        description: uploads a file for a given gateway
        body:
          multipart/form-data:
            formParameters:
                file:
                  description: The file to be uploaded
                  required: true
                  type: file
                fieldName:
                  description: The fieldName associated to the file
                  required: true
                  type: string  
    # ------------------------------------------------------
    /gateways:
      displayName: gateways
      get:
        description: returns a list of active gateways consuming this datasource
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "message": "",
                    "isSuccessful": "true",
                    "data": {
                      "count": 2,
                      "gateways": [
                        {
                          "id": "1",
                          "name": "Gateway 1"
                        },
                        {
                          "id": "2",
                          "name": "Gateway 2"
                        }
                      ]
                    }
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }
          404:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Gateway not found"
                  }       
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /gatewayType:
      displayName: gatewayType
      get:
        description: Describe a gateway type related to the given datasource
        responses:
          200:
            body: 
              application/json:
                example: |            
                  {
                    "message": "",
                    "isSuccessful": "true",
                    "data": {
                      "id": "1",
                      "name": "SAP",
                      "friendlyName": "Application",
                      "properties": [
                        {
                          "errorMessage": "Invalid gateway username",
                          "id": "13",
                          "order": 5,
                          "maxLength": 20,
                          "pattern": "^.*$",
                          "fieldType": "custom",
                          "placeholder": "Username to access your Gateway",
                          "name": "endpointUser",
                          "label": "Gateway Username",
                          "type": "text",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid gateway password",
                          "id": "14",
                          "order": 6,
                          "maxLength": 20,
                          "pattern": "^.*$",
                          "fieldType": "custom",
                          "placeholder": "Assign a password to your Gateway",
                          "name": "endpointPassword",
                          "label": "Gateway Password",
                          "type": "password-generate",
                          "required": true
                        },
                        {
                          "id": "15",
                          "default": false,
                          "order": 8,
                          "maxLength": 10,
                          "pattern": "^.*$",
                          "fieldType": "custom",
                          "name": "applyThrottling",
                          "label": "Apply Throttling?",
                          "type": "checkbox",
                          "required": false
                        },
                        {
                          "errorMessage": "Invalid value",
                          "visible": "applyThrottling",
                          "helpMessage": "The amount of time that responses will be delayed after the SLA has been exceeded",
                          "fieldType": "custom",
                          "label": "Delay Time in Milliseconds",
                          "type": "number",
                          "id": "16",
                          "default": 10000,
                          "pattern": "^[0-9]*$",
                          "order": 9,
                          "maxLength": 8,
                          "name": "delayTimeMillis",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid value",
                          "visible": "applyThrottling",
                          "helpMessage": "Number of attempts to process the request will be made before fully exhausted",
                          "fieldType": "custom",
                          "label": "Delay Attempts",
                          "type": "number",
                          "id": "17",
                          "default": 5,
                          "pattern": "^[0-9]*$",
                          "order": 10,
                          "maxLength": 8,
                          "name": "delayAttempts",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid value",
                          "visible": "applyThrottling",
                          "helpMessage": "The total number of requests to be allowed during the specified time period",
                          "fieldType": "custom",
                          "label": "Maximum Requests Per Period",
                          "type": "number",
                          "id": "18",
                          "default": "",
                          "pattern": "^[0-9]*$",
                          "order": 11,
                          "maxLength": 8,
                          "name": "maxReqPeriod",
                          "required": true
                        }
                      ],
                      "group": "Application"
                    }
                  }
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Validation failed"
                  }        
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }                 
# ------------------------------------------------------
/gateways:
  displayName: gateways
  get:
    description: List of gateways per organization
    queryParameters:
              search:
               displayName: SearchTerm
               type: string
               description: Search Term
               example: MARA
               minLength: 2
               required: false
              environmentIdFilter:
               displayName: Filter by a specific environmentId
               type: string
               minLength: 2
               maxLength: 100
               description: Filter by a specific environmentId
               required: false
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "message": "",
                "isSuccessful": "true",
                "data": {
                  "count": 7,
                  "gateways": [
                    {
                      "chFullDomain": "https://dgw-91132e31-5080-428e-96e8-fe48ae4add1c.cloudhub.io/odata.svc",
                      "status": "active",
                      "properties": {
                        "endpointPassword": "admin",
                        "endpointUser": "admin",
                        "applyThrottling": false
                      },
                      "organizationId": 1,
                      "chDomain": "dgw-91132e31-5080-428e-96e8-fe48ae4add1c",
                      "objectCount": 7,
                      "activeObjectCount": 3,
                      "timestamp": "2015-06-15 14:53:56.0",
                      "id": 1,
                      "draft": false,
                      "description": "This gateway is published to salesforce",
                      "publishedToOrg": "Mulesoft (formerly MuleSource Inc)",
                      "datasourceName": "MySQL",
                      "name": "MySQL Gateway",
                      "datasourceId": 1,
                      "published": true,
                      "typeId": 2,
                      "datasourceTypeId": 2
                    },
                    {
                      "chFullDomain": "https://dgw-453d84e8-0bbe-452a-8027-a3406829a007.cloudhub.io/odata.svc",
                      "status": "active",
                      "properties": {
                        "endpointPassword": "admin",
                        "endpointUser": "admin",
                        "applyThrottling": false
                      },
                      "chDomain": "dgw-453d84e8-0bbe-452a-8027-a3406829a007",
                      "objectCount": 1,
                      "activeObjectCount": 1,
                      "timestamp": "2015-06-08 22:58:41.0",
                      "id": 2,
                      "draft": false,
                      "description": "This gateway is up and running",
                      "publishedToOrg": "",
                      "datasourceName": "Oracle",
                      "name": "Oracle Gateway",
                      "datasourceId": 2,
                      "published": false,
                      "typeId": 2,
                      "datasourceTypeId": 3
                    },
                    {
                      "chFullDomain": "",
                      "status": "inactive",
                      "properties": {
                        "endpointPassword": "admin",
                        "endpointUser": "admin",
                        "applyThrottling": false
                      },
                      "chDomain": "",
                      "objectCount": 0,
                      "activeObjectCount": 0,
                      "timestamp": "2015-06-30 18:16:21.0",
                      "id": 3,
                      "draft": true,
                      "description": "This is just a draft",
                      "publishedToOrg": "",
                      "datasourceName": "MySQL",
                      "name": "Draft Gateway",
                      "datasourceId": 1,
                      "published": false,
                      "typeId": 2,
                      "datasourceTypeId": 2
                    },
                    {
                      "chFullDomain": "https://dgw-2f1f1a1b-14c6-44fb-855d-b7a720fe123a.cloudhub.io/odata.svc",
                      "status": "provisioning",
                      "properties": {
                        "endpointPassword": "admin",
                        "endpointUser": "admin",
                        "applyThrottling": false
                      },
                      "chDomain": "dgw-2f1f1a1b-14c6-44fb-855d-b7a720fe123a",
                      "objectCount": 2,
                      "activeObjectCount": 1,
                      "timestamp": "2015-06-30 18:29:59.0",
                      "id": 4,
                      "draft": false,
                      "description": "f",
                      "publishedToOrg": "",
                      "datasourceName": "MySQL",
                      "name": "Provisioning Gateway",
                      "datasourceId": 1,
                      "published": false,
                      "typeId": 2,
                      "datasourceTypeId": 2
                    },
                    {
                      "chFullDomain": "https://dgw-e2f1c9da-b70f-47c7-b7de-9816a61a7f44.cloudhub.io/odata.svc",
                      "status": "inactive",
                      "properties": {
                        "endpointPassword": "admin",
                        "endpointUser": "admin",
                        "applyThrottling": false
                      },
                      "chDomain": "dgw-e2f1c9da-b70f-47c7-b7de-9816a61a7f44",
                      "objectCount": 4,
                      "activeObjectCount": 2,
                      "timestamp": "2015-07-01 19:01:36.0",
                      "id": 5,
                      "draft": false,
                      "description": "This is stopped",
                      "publishedToOrg": "",
                      "datasourceName": "SAP",
                      "name": "SAP Gateway",
                      "datasourceId": 3,
                      "published": false,
                      "typeId": 1,
                      "datasourceTypeId": 1
                    }
                  ]
                }
              }
      401:
        body:
          application/json: 
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "You must login first"
              }
      503:
        body:
          application/json:
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "Service Unavailable"
              }
  post:
    description: Set the gateway initial setup
    body:
      application/json:
        example:  |
          {
            "name": "Example Gateway",
            "description": "This is a gateway to expose blah data",
            "typeId": "123",
            "draft":false,
            "datasourceId":5,
            "properties": 
            {
              "endpointUser":"admin",
              "endpointPassword":"admin"
            }
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "data": {"id":"1"},
                "isSuccessful": true,
                "message": ""
              }
      400:
        body:
          application/json: 
            example: |
              {
                "data": ["field 1 is invalid", "field 2 is invalid"],
                "isSuccessful": false,
                "message": "Validation failed"
              }  
      401:
        body:
          application/json: 
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "You must login first"
              }
      503:
        body:
          application/json:
            example: |
              {
                "data": {},
                "isSuccessful": false,
                "message": "Service Unavailable"
              } 
  # ------------------------------------------------------  
  /types:
    displayName: gatewayTypes
    get:
      description: List all the available gateway types 
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": 
                    {
                      "count": "3",
                      "gatewayTypes":[
                        {
                          "id":"1",
                          "name":"SAP",
                          "friendlyName":"Application",
                          "properties":[
                            {
                              "id":"1231",
                              "name":"chUser",
                              "friendlyName":"Cloudhub UserName",
                              "valueType":"text",
                              "mandatory":true,
                              "fieldType":"standard.ch",
                              "order":1,
                              "helpText":"this is a help text",
                              "maxSize":20,
                              "validationRegEx":"[.*]",
                              "validationErrorMsg":"Invalid Bla"
                            }
                          ]
                        }
                      ]
                    },
                  "isSuccessful": false,
                  "message": "You must login first"
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /{gatewayTypeId}:
      displayName: gatewayType
      get:
        description: Describe a gateway and the attributes that define it
        responses:
          200:
            body: 
              application/json:
                example: |            
                  {
                    "message": "",
                    "isSuccessful": "true",
                    "data": {
                      "id": "2",
                      "name": "DB",
                      "friendlyName": "Database",
                      "properties": [
                        {
                          "id": "20",
                          "order": 4,
                          "maxLength": 1,
                          "helpMessage": "Enforces authentication according to the details configured in a security manager policy.",
                          "pattern": "^.*$",
                          "fieldType": "custom",
                          "name": "basicAuthLabel",
                          "label": "Basic Authentication",
                          "type": "title",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid gateway username",
                          "id": "22",
                          "order": 5,
                          "maxLength": 20,
                          "pattern": "^.*$",
                          "fieldType": "custom",
                          "placeholder": "Username to access your Gateway",
                          "name": "endpointUser",
                          "label": "Gateway Username",
                          "type": "text",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid gateway password",
                          "id": "23",
                          "order": 6,
                          "maxLength": 20,
                          "pattern": "^.*$",
                          "fieldType": "custom",
                          "placeholder": "Assign a password to your Gateway",
                          "name": "endpointPassword",
                          "label": "Gateway Password",
                          "type": "password-generate",
                          "required": true
                        },
                        {
                          "id": "24",
                          "default": false,
                          "order": 8,
                          "maxLength": 10,
                          "pattern": "^.*$",
                          "fieldType": "custom",
                          "name": "applyThrottling",
                          "label": "Apply Throttling?",
                          "type": "checkbox",
                          "required": false
                        },
                        {
                          "errorMessage": "Invalid value",
                          "enabled": "applyThrottling",
                          "helpMessage": "The amount of time that responses will be delayed after the SLA has been exceeded",
                          "fieldType": "custom",
                          "label": "Delay Time in Milliseconds",
                          "type": "number",
                          "id": "25",
                          "default": 10000,
                          "pattern": "^[0-9]*$",
                          "order": 9,
                          "maxLength": 8,
                          "name": "delayTimeMillis",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid value",
                          "enabled": "applyThrottling",
                          "helpMessage": "Number of attempts to process the request will be made before fully exhausted",
                          "fieldType": "custom",
                          "label": "Delay Attempts",
                          "type": "number",
                          "id": "26",
                          "default": 5,
                          "pattern": "^[0-9]*$",
                          "order": 10,
                          "maxLength": 8,
                          "name": "delayAttempts",
                          "required": true
                        },
                        {
                          "errorMessage": "Invalid value",
                          "enabled": "applyThrottling",
                          "helpMessage": "The total number of requests to be allowed during the specified time period",
                          "fieldType": "custom",
                          "label": "Maximum Requests Per Period",
                          "type": "number",
                          "id": "27",
                          "default": "",
                          "pattern": "^[0-9]*$",
                          "order": 11,
                          "maxLength": 8,
                          "name": "maxReqPeriod",
                          "required": true
                        },
                        {
                          "id": "28",
                          "order": 7,
                          "maxLength": 1,
                          "helpMessage": "Throttles the number of messages per millisecond to be processed by an API. Queues any messages beyond the maximum for later processing. Applies throttling to all API calls, regardless of the source.",
                          "pattern": "^.*$",
                          "fieldType": "custom",
                          "name": "throttlingLabel",
                          "label": "Throttling",
                          "type": "title",
                          "required": true
                        }
                      ],
                      "group": "Database"
                    }
                  }
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": ["field 1 is invalid", "field 2 is invalid"],
                    "isSuccessful": false,
                    "message": "Validation failed"
                  }        
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
  # ----------------------------------------------------------------
  /validate:
    /name:
      displayName: Validate Gateway Name
      post:
        description: Validates the gateway name
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "validate" : { 
                    "maxLength": 45,
                    "type" : "string" 
                    }
                  },
                "required": ["validate"]  
              }
            example: |
              {
                "validate": "Example Gateway"
              }
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "data": {
                      "valid": true
                    },
                    "isSuccessful": true,
                    "message": ""
                  }
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Validation failed"
                  } 
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  } 
  # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
  /{gatewayId}:
    displayName: gatewayId
    get:
      description: Retrieves Gateway details
      responses:
        200:
         body:
            application/json:
              example: |
                {
                "data": {
                  "chFullDomain": "https://dgw-91132e31-5080-428e-96e8-fe48ae4add1c.cloudhub.io/odata.svc",
                  "status": "active",
                  "properties": {
                    "endpointPassword": "admin",
                    "endpointUser": "admin",
                    "applyThrottling": false
                  },
                  "organizationId": 1,
                  "chDomain": "dgw-91132e31-5080-428e-96e8-fe48ae4add1c",
                  "objectCount": 7,
                  "timestamp": "2015-06-15 14:53:56.0",
                  "id": 1,
                  "draft": false,
                  "description": "This gateway is published to salesforce",
                  "publishedToOrg": "Mulesoft (formerly MuleSource Inc)",
                  "datasourceName": "MySQL",
                  "name": "MySQL Gateway",
                  "datasourceId": 1,
                  "published": true,
                  "typeId": 2
                },
                "isSuccessful": true,
                "message": ""
                }                 
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
        404:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Gateway not found"
                }     
    # *****************************************************
    put:
      description: Updates the gateway resource
      body:
        application/json:
          example: |
            {
              "name": "Example Gateway",
              "description": "This is a gateway to expose blah data",
              "typeId": "123",
              "draft":false,
              "datasourceId":5,
              "properties": 
              {
                "endpointUser":"admin",
                "endpointPassword":"admin"
              }
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {},
                  "isSuccessful": true,
                  "message": ""
                }
        400:
          body:
            application/json: 
              example: |
                {
                  "data": ["field 1 is invalid", "field 2 is invalid"],
                  "isSuccessful": false,
                  "message": "Validation failed"
                } 
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
    # *****************************************************
    delete:
      description: Allows you to delete (unpublish and deactivate) a gateway
      responses:
        202:
          body:
            application/json:
              example: |
                {
                  "data": {},
                  "isSuccessful": true,
                  "message": ""
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "You must login first"
                }
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /activate:
      displayName: activate
      post:
        description: Allows you to change the status of the gateway to active.
        responses:
          202:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": true,
                    "message": ""
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }
    /validate: 
      /entities:
        displayName: Validate Gateway Entities against external datasource
        post:
          description: Validate Gateway Entities against external datasource
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                        "data": [
                            {
                                "name": "employees",
                                "description": "",
                                "id": 281,
                                "enabled": "true",
                                "remoteEntity": "Employees",
                                "friendlyName": "Employees",
                                "properties": [
                                    {
                                        "fieldName": "EmployeeID",
                                        "nullable": "true",
                                        "name": "EmployeeID",
                                        "length": "5",
                                        "messages": [
                                            "Shouldn't be nullable",
                                            "Length mismatch",
                                            "Should be key"
                                        ],
                                        "id": 2858,
                                        "type": "Int32",
                                        "fieldType": "Int32",
                                        "key": "false"
                                    },
                                    {
                                        "fieldName": "FirstName",
                                        "nullable": "false",
                                        "name": "FirstName",
                                        "length": "10",
                                        "messages": [],
                                        "id": 2859,
                                        "type": "String",
                                        "fieldType": "String",
                                        "key": "false"
                                    },
                                    {
                                        "fieldName": "Title",
                                        "nullable": "true",
                                        "name": "Title",
                                        "length": "30",
                                        "messages": [],
                                        "id": 2860,
                                        "type": "String",
                                        "fieldType": "String",
                                        "key": "false"
                                    }
                                ]
                            },
                            {
                                "name": "customer_trx_linesj",
                                "description": "duplicate!",
                                "id": 284,
                                "message": "Object not found",
                                "enabled": "false",
                                "remoteEntity": "RA_CUSTOMER_TRX_LINES_ALL_VEB",
                                "friendlyName": "Customer TRX linesj",
                                "properties": [
                                    {
                                        "fieldName": "ACCOUNTING_RULE_ID",
                                        "nullable": "true",
                                        "name": "ACCOUNTING_RULE_ID",
                                        "length": "4",
                                        "id": 2875,
                                        "type": "Int32",
                                        "fieldType": "Int32",
                                        "key": "false"
                                    },
                                    {
                                        "fieldName": "ACCTD_AMOUNT_DUE_ORIGINAL",
                                        "nullable": "true",
                                        "name": "ACCTD_AMOUNT_DUE_ORIGINAL",
                                        "length": "4",
                                        "id": 2876,
                                        "type": "Int32",
                                        "fieldType": "Int32",
                                        "key": "true"
                                    }
                                ]
                            },
                            {
                                "name": "customer_data",
                                "description": "",
                                "id": 285,
                                "message": "Object not found",
                                "enabled": "false",
                                "remoteEntity": "CUSTOMER_DATA",
                                "friendlyName": "CUSTOMER_DATA",
                                "properties": [
                                    {
                                        "fieldName": "ID",
                                        "nullable": "false",
                                        "name": "ID",
                                        "length": "4",
                                        "id": 2877,
                                        "type": "Int32",
                                        "fieldType": "Int32",
                                        "key": "true"
                                    },
                                    {
                                        "fieldName": "USERNAME",
                                        "nullable": "true",
                                        "name": "USERNAME",
                                        "length": "16",
                                        "id": 2878,
                                        "type": "String",
                                        "fieldType": "String",
                                        "key": "false"
                                    },
                                    {
                                        "fieldName": "PASSWD",
                                        "nullable": "true",
                                        "name": "PASSWD",
                                        "length": "16",
                                        "id": 2879,
                                        "type": "String",
                                        "fieldType": "String",
                                        "key": "false"
                                    }
                                ]
                            }
                        ],
                        "isSuccessful": "true",
                        "message": ""
                      }
            400:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "Validation failed"
                    } 
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    }
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++      
    /deactivate:
      displayName: deactivate
      post:
        description: Allows you to change the status of the gateway to inactive.
        responses:
          202:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": true,
                    "message": ""
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }
    # +++++++++++++++++++++++++++++++++++++++++++++++++++++      
    /upgrade:
      displayName: upgrade
      post:
        description: Allows you to upgrade a gateway to the latest version.
        responses:
          202:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": true,
                    "message": ""
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }                  
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /publish:
      displayName: Publish Status
      post:
        description: Allows you to publish a gateway to a sfdc organization.
        body:
          application/json:
            example:  |
              {
              }
        responses:
          202:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": true,
                    "message": ""
                  }
          400:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Ivalid org id"
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /unpublish:
      displayName: Publish Status
      post:
        description: Allows you to unpublish a gateway to a sfdc organizatino.
        responses:
          202:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": true,
                    "message": ""
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }
        # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /synchronize:
      displayName: synchronize
      post:
        description: Synchronizes the objects in SFDC
        responses:
          202:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": true,
                    "message": ""
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }              
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++   
    /import:
      displayName: ImportObjects
      post:
        description: Import Objects
        responses:
          202:
            body:
              application/json:
                schema: importSchema
                example: |
                  {
                    "data": [
                          {
                            "name": "gateways",
                            "id": 241,
                            "enabled": "true",
                            "remoteEntity": "gateways",
                            "friendlyName": "gateways",
                            "properties": [
                                {
                                    "fieldName": "id",
                                    "nullable": "false",
                                    "name": "id",
                                    "length": "4",
                                    "id": 2568,
                                    "type": "Int32",
                                    "fieldType": "Int32",
                                    "key": "true"
                                },
                                {
                                    "fieldName": "draft",
                                    "nullable": "true",
                                    "name": "draft",
                                    "length": "5",
                                    "id": 2569,
                                    "type": "String",
                                    "fieldType": "String",
                                    "key": "false"
                                },
                                {
                                    "fieldName": "ch_domain",
                                    "nullable": "true",
                                    "name": "ch_domain",
                                    "length": "100",
                                    "id": 2570,
                                    "type": "String",
                                    "fieldType": "String",
                                    "key": "false"
                                },
                                {
                                    "fieldName": "ch_full_domain",
                                    "nullable": "true",
                                    "name": "ch_full_domain",
                                    "length": "100",
                                    "id": 2571,
                                    "type": "String",
                                    "fieldType": "String",
                                    "key": "false"
                                },
                                {
                                    "fieldName": "datasource_id",
                                    "nullable": "true",
                                    "name": "datasource_id",
                                    "length": "4",
                                    "id": 2572,
                                    "type": "Int32",
                                    "fieldType": "Int32",
                                    "key": "false"
                                },
                                {
                                    "fieldName": "gateway_type_id",
                                    "nullable": "true",
                                    "name": "gateway_type_id",
                                    "length": "4",
                                    "id": 2573,
                                    "type": "Int32",
                                    "fieldType": "Int32",
                                    "key": "false"
                                }
                            ]
                        }
                    ],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }    
                
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++  
    /test:
      displayName: Test
      post:
        description: Allows you to the the connectivity against a datagateway
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": true,
                    "message": ""
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++   
    /logs:
      displayName: Log
      get:
        description: Allows you to the get the log from the underlying worker
        queryParameters:
         limit:
           displayName: Limit
           type: number
           description: Limit
           example: 100
           default: 100
           minimum: 0
           required: false
         offset:
           displayName: Offset
           type: number
           description: Offset
           example: 50
           minimum: 0
           required: false
         search:
           displayName: SearchTerm
           type: string
           description: Search Term
           example: Exception
           required: false
         priority:
           displayName: Priority
           enum: [ERROR, FATAL, INFO, SYSTEM, CONSOLE, WARN, DEBUG]
           type: string
           description: Priority
           example: MARA
           required: false                      
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "data": {
                      "count": 2,
                      "logs": [
                        {
                        "sequenceNumber": 1420469535062,
                        "timestamp": 1420476875060,
                        "serverId": "if741e91a",
                        "message": "Development mode enabled",
                        "priority": "INFO"
                        },{
                        "sequenceNumber": 1420469535061,
                        "timestamp": 1420476872850,
                        "serverId": "if741e91a",
                        "message": "Development mode enabled", 
                        "priority": "INFO"
                        }
                      ]},
                    "isSuccessful": true,
                    "message": ""
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }              
      # ++++++++++++++++++++++++++++++++++++++++++++++++++++++   
      /download:
        displayName: Log
        get:
          description: Allows you to the get the log from the underlying worker
          queryParameters:
           limit:
             displayName: Limit
             type: number
             description: Limit
             example: 100
             default: 100
             minimum: 0
             required: false
           offset:
             displayName: Offset
             type: number
             description: Offset
             example: 50
             minimum: 0
             required: false
           search:
             displayName: SearchTerm
             type: string
             description: Search Term
             example: Exception
             required: false
           priority:
             displayName: Priority
             enum: [ERROR, FATAL, INFO, SYSTEM, CONSOLE, WARN, DEBUG]
             type: string
             description: Priority
             example: MARA
             required: false                      
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "data": {
                        "downloadLink": "https://www.google.com.ar/images/srpr/logo11w.png"
                        },
                      "isSuccessful": true,
                      "message": ""
                    }
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    }
            503:
              body:
                application/json:
                  example: |
                    {
                      "data": {},
                      "isSuccessful": false,
                      "message": "Service Unavailable"
                    }              
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++       
    /entities:
      displayName: entities
      get:
        description: Retrieve a list of the entities exposed by the gateway. Allows you to perform searches over the entities
        queryParameters:
             search:
               displayName: SearchTerm
               type: string
               description: Search Term
               example: MARA
               minLength: 2
               required: false
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "data": {
                      "entitySet": [
                        {
                          "id": 1,
                          "remoteEntity": "T001",
                          "friendlyName": "CompanyCodes",
                          "name": "CompanyCodes",
                          "description": "I am a description",
                          "enabled": "true",
                          "properties": [
                            {
                            "description": "Client",
                            "name": "Client",
                            "fieldName": "MANDT",
                            "length": "3",
                            "nullable": "true",
                            "type": "C",
                            "key": "false"
                            }
                          ]
                        }
                      ]  
                    },
                    "isSuccessful": true,
                    "message": ""
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }  
      post:
        description: creates a new entity with properties
        body:
          application/json:
            schema: gatewaySetup
            example: |
              {
                "remoteEntity": "T001",
                "name": "CompanyCodes",
                "description": "I am a description",
                "enabled": "true",
                "properties": [
                  {
                  "description": "Client",
                  "name": "Client",
                  "fieldName": "MANDT",
                  "length": "3",
                  "nullable": "true",
                  "type": "C",
                  "key": "false"
                  }
                ]
              }
        responses:
          201:
            body:
              application/json:
                example: |
                  {
                    "data": {"id":"1"},
                    "isSuccessful": true,
                    "message": "Bad request"
                  }
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Bad Request"
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  } 
        # ------------------------------------------------------
      /validate:
        /name:
          displayName: validates the name for uniqueness  
          post:
            description: Validates the entity name
            body:
              application/json:
                schema: |
                  {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "validate" : { 
                        "maxLength": 45,
                        "type" : "string" 
                        }
                      },
                    "required": ["validate"]  
                  }
                example: |
                  {
                    "validate": "entityName"
                  }
            responses:
              200:
                body:
                  application/json:
                    example: |
                      {
                        "data": {
                          "valid": true
                        },
                        "isSuccessful": true,
                        "message": ""
                      }
              400:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "Validation failed"
                      } 
              401:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "You must login first"
                      }  
                      
     # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
        /preimport:
          displayName: Validate pre-import
          post:
            description: Validate that objects will work on destination gateway
            responses:
              202:
                body:
                  application/json:
                    schema: importSchema
                    example: |
                      {
                        "data": [
                            {
                                "name": "employees",
                                "description": "",
                                "id": 281,
                                "enabled": "true",
                                "remoteEntity": "Employees",
                                "friendlyName": "Employees",
                                "properties": [
                                    {
                                        "fieldName": "EmployeeID",
                                        "nullable": "true",
                                        "name": "EmployeeID",
                                        "length": "5",
                                        "messages": [
                                            "Shouldn't be nullable",
                                            "Length mismatch",
                                            "Should be key"
                                        ],
                                        "id": 2858,
                                        "type": "Int32",
                                        "fieldType": "Int32",
                                        "key": "false"
                                    },
                                    {
                                        "fieldName": "FirstName",
                                        "nullable": "false",
                                        "name": "FirstName",
                                        "length": "10",
                                        "messages": [],
                                        "id": 2859,
                                        "type": "String",
                                        "fieldType": "String",
                                        "key": "false"
                                    },
                                    {
                                        "fieldName": "Title",
                                        "nullable": "true",
                                        "name": "Title",
                                        "length": "30",
                                        "messages": [],
                                        "id": 2860,
                                        "type": "String",
                                        "fieldType": "String",
                                        "key": "false"
                                    }
                                ]
                            },
                            {
                                "name": "customer_trx_linesj",
                                "description": "duplicate!",
                                "id": 284,
                                "message": "Object not found",
                                "enabled": "false",
                                "remoteEntity": "RA_CUSTOMER_TRX_LINES_ALL_VEB",
                                "friendlyName": "Customer TRX linesj",
                                "properties": [
                                    {
                                        "fieldName": "ACCOUNTING_RULE_ID",
                                        "nullable": "true",
                                        "name": "ACCOUNTING_RULE_ID",
                                        "length": "4",
                                        "id": 2875,
                                        "type": "Int32",
                                        "fieldType": "Int32",
                                        "key": "false"
                                    },
                                    {
                                        "fieldName": "ACCTD_AMOUNT_DUE_ORIGINAL",
                                        "nullable": "true",
                                        "name": "ACCTD_AMOUNT_DUE_ORIGINAL",
                                        "length": "4",
                                        "id": 2876,
                                        "type": "Int32",
                                        "fieldType": "Int32",
                                        "key": "true"
                                    }
                                ]
                            },
                            {
                                "name": "customer_data",
                                "description": "",
                                "id": 285,
                                "message": "Object not found",
                                "enabled": "false",
                                "remoteEntity": "CUSTOMER_DATA",
                                "friendlyName": "CUSTOMER_DATA",
                                "properties": [
                                    {
                                        "fieldName": "ID",
                                        "nullable": "false",
                                        "name": "ID",
                                        "length": "4",
                                        "id": 2877,
                                        "type": "Int32",
                                        "fieldType": "Int32",
                                        "key": "true"
                                    },
                                    {
                                        "fieldName": "USERNAME",
                                        "nullable": "true",
                                        "name": "USERNAME",
                                        "length": "16",
                                        "id": 2878,
                                        "type": "String",
                                        "fieldType": "String",
                                        "key": "false"
                                    },
                                    {
                                        "fieldName": "PASSWD",
                                        "nullable": "true",
                                        "name": "PASSWD",
                                        "length": "16",
                                        "id": 2879,
                                        "type": "String",
                                        "fieldType": "String",
                                        "key": "false"
                                    }
                                ]
                            }
                        ],
                        "isSuccessful": "true",
                        "message": ""
                      }
              401:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "You must login first"
                      }
              503:
                body:
                  application/json:
                    example: |
                      {
                        "data": {},
                        "isSuccessful": false,
                        "message": "Service Unavailable"
                      }
                     
   
      # ++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
      /{entityId}:
        put:
          description: changes an existing entity with properties
          body:
            application/json:
              schema: gatewaySetup
              example: |
                {
                  "remoteEntity": "T001",
                  "synchronize": true,
                  "name": "CompanyCodes",
                  "description": "I am a description",
                  "enabled": "true",
                  "properties": [
                    {
                    "description": "Client",
                    "name": "Client",
                    "fieldName": "MANDT",
                    "length": "3",
                    "nullable": "true",
                    "type": "C",
                    "key": "false"
                    }
                  ]
                }
          responses:
            201:
              body:
                application/json:
                  example: |
                    {
                      "data": {"id":"1"},
                      "isSuccessful": true,
                      "message": "Bad request"
                    }
            400:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "Bad Request"
                    }
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    } 
        # ++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
        get:
          description: Retrieve a single entity exposed by the gateway.
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "data": {
                          "id": 1,
                          "remoteEntity": "T001",
                          "name": "CompanyCodes",
                          "friendlyName": "CompanyCodes",
                          "description": "I am a description",
                          "enabled": "true",
                          "properties": [
                            {
                            "description": "Client",
                            "name": "Client",
                            "fieldName": "MANDT",
                            "length": "3",
                            "nullable": "true",
                            "type": "C",
                            "key": "false"
                            }
                          ] 
                      },
                      "isSuccessful": true,
                      "message": ""
                    }
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    }  
        # ++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
        delete:    
          description: Allows to delete (and unpublish) an entity
          responses:
            202:
              body:
                application/json:
                  example: |
                    {
                      "data": {},
                      "isSuccessful": true,
                      "message": ""
                    }
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    }
        # ++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
        /enable:
          post:
            description: activates an entity without firing the synchronization
            body:   
            responses:
              201:
                body:
                  application/json:
                    example: |
                      {
                        "data": {"id":"1"},
                        "isSuccessful": true,
                        "message": ""
                      }
              400:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "Bad Request"
                      }
              401:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "You must login first"
                      } 
        # ++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
        /disable:
          post:
            description: disables an entity without firing the synchronization
            body:   
            responses:
              201:
                body:
                  application/json:
                    example: |
                      {
                        "data": {"id":"1"},
                        "isSuccessful": true,
                        "message": ""
                      }
              400:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "Bad Request"
                      }
              401:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "You must login first"
                      }

    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++                          
    /remoteentities:
      displayName: entities
      get:
        description: Retrieve a list of entities from the remote system. Allows you to perform searches over the entities
        queryParameters:
             search:
               displayName: SearchTerm
               type: string
               description: Search Term
               example: MARA
               minLength: 2
               required: false
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "message": "",
                    "isSuccessful": "true",
                    "data": {
                      "entitySet": [
                        {
                          "remoteEntity": "MARA",
                          "name": "MARA",
                          "properties": []
                        },
                        {
                          "remoteEntity": "T001",
                          "name": "T001",
                          "properties": []
                        }
                      ]
                    }
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
      # *****************************************************
      /{entityName}:
        get:
          description: Retrieve the details for a single entity. Allows you to perform searches over the entities fields
          queryParameters:
             search:
               displayName: SearchTerm
               type: string
               description: Search Term
               example: MARA
               minLength: 2
               required: false
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "message": "",
                      "isSuccessful": "true",
                      "data": {
                        "entitySet": [
                          {
                            "remoteEntity": "T001",
                            "name": "T001",
                            "hasPrimaryKey": false,
                            "properties": [
                              {
                                "description": "Client",
                                "name": "Client",
                                "fieldName": "MANDT",
                                "length": "3",
                                "nullable": "true",
                                "type": "C",
                                "key": "true"
                              },
                              {
                                "description": "Company Code",
                                "name": "Company_Code",
                                "fieldName": "BUKRS",
                                "length": "4",
                                "nullable": "true",
                                "type": "C",
                                "key": "false"
                              },{
                                "description": "Example 1",
                                "name": "Example_1",
                                "fieldName": "DEER",
                                "length": "3",
                                "nullable": "true",
                                "type": "C",
                                "key": "false"
                              }
                            ]
                          }
                        ]
                      }
                    }
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    }
  /entities:
    displayName: entities
    get:
      description: List of entities for a given gateway
      queryParameters:
        uid:
          displayName: uid
          type: string
          description: uid
          example: dgw-a0f1a454-8eaa-44b1-9575-8c634223455e
          minLength: 5
          required: true
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "entitySet": [
                      {
                        "id": 1,
                        "remoteEntity": "T001",
                        "name": "CompanyCodes",
                        "description": "I am a description",
                        "enabled": "true",
                        "properties": [
                          {
                          "description": "Client",
                          "name": "Client",
                          "fieldName": "MANDT",
                          "length": "3",
                          "nullable": "true",
                          "type": "C",
                          "key": "false"
                          }
                        ]
                      }
                    ]  
                  },
                  "isSuccessful": true,
                  "message": ""
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "invalid UID"
                }
        503:
          body:
            application/json:
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Service Unavailable"
                }
  /notifications:
    displayName: Creates notifications for a given gateway
    post:
      description: Creates and sends a notification to the user associated to the gateway
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "uid" : { 
                  "maxLength": 100,
                  "type" : "string" 
                  },
                "description" : {  
                  "maxLength": 400,
                  "type" : "string" 
                  },
                "type" : {
                  "enum": ["info", "warning", "critical"]
                  }
                },
              "required": ["uid", "description", "type"]    
            }
          example:  |
            {
              "uid": "dgw-a0f1a454-8eaa-44b1-9575-8c634223455e",
              "title": "JDBC Data Gateway is down",
              "description": "This is a gateway to expose blah data",
              "type": "warning"
            }
      responses:
        201:
          body:
            application/json:
              example: |
                {
                  "data": {"id":"1"},
                  "isSuccessful": true,
                  "message": ""
                }
        400:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Bad Request"
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "invalid UID"
                }
        503:
          body:
            application/json:
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Service Unavailable"
                }
# ------------------------------------------------------
/me:
  displayName: currentUser
  get:
    description: Describe the current logged user
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "data": {
                  "id": "123abc",
                  "username": "some_user_name",
                  "firstName": "John",
                  "lastName": "Doe",
                  "email": "john.doe@mycompany.com",
                  "company": "My Company LTD",
                  "phone": "5553605",
                  "firstTime": "true",
                  "organization": {
                    "name": "MuleSoft Inc",
                    "id": "f0c9b011-980e-4928-9430-e60e3a97c043",
                    "domain": "mulesoft-inc",
                    "isMaster": true
                  },
                  "memberOfOrganizations": [
                    {
                      "name": "MuleSoft Inc",
                      "id": "a8886ae1-ba56-40e9-9d6d-92fe4d12758a",
                      "parentName": null,
                      "parentId": null,
                      "isMaster": true
                    },
                    {
                      "name": "Api Platform",
                      "id": "ebed65fd-29f9-4638-b28d-5a1dabdc0a70",
                      "parentName": "MuleSoft Inc",
                      "parentId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                      "isMaster": false
                    },
                    {
                      "name": "test",
                      "id": "d375849a-428f-4974-aaa1-e89a8ef96906",
                      "parentName": "MuleSoft Inc",
                      "parentId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                      "isMaster": false
                    },
                    {
                      "name": "sub-org-level-2",
                      "id": "53d96000-2400-46d3-998b-78f4f0289d0d",
                      "parentName": "test",
                      "parentId": "d375849a-428f-4974-aaa1-e89a8ef96906",
                      "isMaster": false
                    },
                    {
                      "name": "suborg-test-3",
                      "id": "d76d7b83-8aa0-4b20-a689-3e7a7e1bcb58",
                      "parentName": "test",
                      "parentId": "d375849a-428f-4974-aaa1-e89a8ef96906",
                      "isMaster": false
                    },
                    {
                      "name": "suborg-level-4",
                      "id": "f192de1e-09d9-430e-884b-1b25cad8bbed",
                      "parentName": "suborg-test-3",
                      "parentId": "d76d7b83-8aa0-4b20-a689-3e7a7e1bcb58",
                      "isMaster": false
                    }
                  ],
                  "contributorOfOrganizations": [
                    {
                      "name": "MuleSoft Inc",
                      "id": "a8886ae1-ba56-40e9-9d6d-92fe4d12758a",
                      "parentName": null,
                      "parentId": null,
                      "isMaster": true
                    },
                    {
                      "name": "Api Platform",
                      "id": "ebed65fd-29f9-4638-b28d-5a1dabdc0a70",
                      "parentName": "MuleSoft Inc",
                      "parentId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                      "isMaster": false
                    },
                    {
                      "name": "test",
                      "id": "d375849a-428f-4974-aaa1-e89a8ef96906",
                      "parentName": "MuleSoft Inc",
                      "parentId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                      "isMaster": false
                    },
                    {
                      "name": "sub-org-level-2",
                      "id": "53d96000-2400-46d3-998b-78f4f0289d0d",
                      "parentName": "test",
                      "parentId": "d375849a-428f-4974-aaa1-e89a8ef96906",
                      "isMaster": false
                    },
                    {
                      "name": "suborg-test-3",
                      "id": "d76d7b83-8aa0-4b20-a689-3e7a7e1bcb58",
                      "parentName": "test",
                      "parentId": "d375849a-428f-4974-aaa1-e89a8ef96906",
                      "isMaster": false
                    },
                    {
                      "name": "suborg-level-4",
                      "id": "f192de1e-09d9-430e-884b-1b25cad8bbed",
                      "parentName": "suborg-test-3",
                      "parentId": "d76d7b83-8aa0-4b20-a689-3e7a7e1bcb58",
                      "isMaster": false
                    }
                  ]
                },
                "isSuccessful": false,
                "message": ""
              }
      401:
        body:
          application/json: 
            example: |
              {
                "data": [],
                "isSuccessful": false,
                "message": "You must login first"
              }
  # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
  /organizations:
    /{organizationId}:
      displayName: Set an organization
      post:
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "data": {
                      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjc0lkIjoiM2Y2YmMwYzktZmIwNy00N2E5LTliYzMtNzZhMTE2YzBjZjYxIiwiY2hVc2VybmFtZSI6ImRhdGFnYXRld2F5IiwidXNlcklkIjoiMSIsImNzVG9rZW4iOiI4MTc1ZjQzOTEzMmQ3MDQ1ODhjZDFmNDFiMDRjYzA1NTRiZTY5ZWQ5N2MwYmIzZGU3Yjg1Y2RmNjVjNzY4ZmIzZTIzNDhiM2I2MDI3OGUzYjU4NmYxZDJiNzgxOWRiY2MiLCJvcmdhbml6YXRpb25JZCI6IjEiLCJhY2NvdW50U2ZkY0lkIjoiMSIsImNzQ29udGV4dCI6eyJvcmdhbml6YXRpb25OYW1lIjoiTXVsZVNvZnQiLCJvcmdhbml6YXRpb25JZCI6ImE4ODg2YWUxLWJhNTYtNDBlOS05ZDZkLTkyZmU0ZDEyNzU4YSIsImVudmlyb25tZW50TmFtZSI6IlByb2R1Y3Rpb24iLCJlbnZpcm9ubWVudElkIjoiNTUyZDE5MWJlNGIwY2NmM2I0YTExOTM2Iiwicm9sZSI6ImFkbWluIn19.afvniZs8KdswZq21_rAc_nhWuvdMOHUA6XsOe78cfdQ"
                    },
                    "isSuccessful": true,
                    "message": ""
                  }
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Invalid organization id"
                  } 
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "You must login first"
                  }
      /environments:
        displayName: Retrieve environments for an org
        get:
          description: List all the suborgs and environments for the user
          responses:
            200:
              body:
                application/json: 
                  example: |
                    {
                      "data": 
                        {
                          "environments": [
                            {
                              "environmentId": "54506755e4b05977157695a2",
                              "name": "Production",
                              "organizationId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                              "isProduction": true
                            },
                            {
                              "id": "62d10b8b-e999-43b9-9390-91041d229c1f",
                              "name": "second",
                              "organizationId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                              "isProduction": false
                            },
                            {
                              "id": "83aa6b8e-526a-4793-b5bf-dca8f75f3114",
                              "name": "juanito",
                              "organizationId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                              "isProduction": false
                            },
                            {
                              "id": "d388be02-97d6-4aab-9e49-0d08da52d156",
                              "name": "test",
                              "organizationId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                              "isProduction": true
                            },
                            {
                              "id": "3af32814-c001-4cc3-bdb4-89be49dfeb94",
                              "name": "TestEnv",
                              "organizationId": "f0c9b011-980e-4928-9430-e60e3a97c043",
                              "isProduction": false
                            }
                          ],
                          "total": 5
                        },
                      "isSuccessful": true,
                      "message": ""
                    }
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": {},
                      "isSuccessful": false,
                      "message": "You must login first"
                    }
        /{environmentId}:
          displayName: Set an environment
          post:
            responses:
              200:
                body:
                  application/json:
                    example: |
                      {
                        "data": {
                          "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjc0lkIjoiM2Y2YmMwYzktZmIwNy00N2E5LTliYzMtNzZhMTE2YzBjZjYxIiwiY2hVc2VybmFtZSI6ImRhdGFnYXRld2F5IiwidXNlcklkIjoiMSIsImNzVG9rZW4iOiI4MTc1ZjQzOTEzMmQ3MDQ1ODhjZDFmNDFiMDRjYzA1NTRiZTY5ZWQ5N2MwYmIzZGU3Yjg1Y2RmNjVjNzY4ZmIzZTIzNDhiM2I2MDI3OGUzYjU4NmYxZDJiNzgxOWRiY2MiLCJvcmdhbml6YXRpb25JZCI6IjEiLCJhY2NvdW50U2ZkY0lkIjoiMSIsImNzQ29udGV4dCI6eyJvcmdhbml6YXRpb25OYW1lIjoiTXVsZVNvZnQiLCJvcmdhbml6YXRpb25JZCI6ImE4ODg2YWUxLWJhNTYtNDBlOS05ZDZkLTkyZmU0ZDEyNzU4YSIsImVudmlyb25tZW50TmFtZSI6IlByb2R1Y3Rpb24iLCJlbnZpcm9ubWVudElkIjoiNTUyZDE5MWJlNGIwY2NmM2I0YTExOTM2Iiwicm9sZSI6ImFkbWluIn19.afvniZs8KdswZq21_rAc_nhWuvdMOHUA6XsOe78cfdQ"
                        },
                        "isSuccessful": true,
                        "message": ""
                      }
              400:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "Invalid environment id"
                      } 
              401:
                body:
                  application/json: 
                    example: |
                      {
                        "data": [],
                        "isSuccessful": false,
                        "message": "You must login first"
                      }
  # ++++++++++++++++++++++++++++++++++++++++++++++++++++++
  /notifications:
    displayName: notifications
    get:
      description: List all the notifications for the user
      responses:
        200:
          body:
            application/json: 
              example: |
                {
                  "data":
                    {
                      "count": "2",
                      "notifications":[
                        {
                          "id":"1",
                          "title":"New version available",
                          "description":"There is a new version available for your SAP Data Gateway",
                          "read":"false",
                          "type":"warning",
                          "timestamp":"01-01-2015 12:32:34"
                        },
                        {
                          "id":"2",
                          "title":"Your SAP Gateway is ready",
                          "description":"Your new gateway has been provisioned",
                          "read":"false",
                          "type":"warning",
                          "timestamp":"01-01-2015 14:37:09"
                        },
                        {
                          "id":"3",
                          "title":"Upgrade your SAP Data Gateway to v1.3",
                          "description":"A new version of the SAP Data Gateway is available",
                          "gatewayId": 1,
                          "read":"false",
                          "type":"upgrade",
                          "timestamp":"01-01-2015 14:37:09"
                        }
                      ]
                    },
                  "isSuccessful": false,
                  "message": "You must login first"
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": {},
                  "isSuccessful": false,
                  "message": "You must login first"
                }
    # ------------------------------------------------------
    /{notificationId}/read:
      put:
        description: marks the notification as read,
        responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "data": {},
                      "isSuccessful": true,
                      "message": ""
                    }
            400:
              body:
                application/json: 
                  example: |
                    {
                      "data": ["field 1 is invalid", "field 2 is invalid"],
                      "isSuccessful": false,
                      "message": "Validation failed"
                    } 
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    }
  # ------------------------------------------------------
  /feedback:
    displayName: Feedback
    post:
      description: Stores feedback from the users
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "subject" : { 
                  "maxLength": 100,
                  "type" : "string" 
                  },
                "description" : { 
                  "maxLength": 400,
                  "type" : "string" 
                  }
                },
              "required": ["subject", "description"]  
            }
          example:  |
            {
              "subject": "This is the best product ever",
              "description": "I love hydra"
            }
      responses:
        201:
          body:
            application/json:
              example: |
                {
                  "data": {"id":"1"},
                  "isSuccessful": true,
                  "message": ""
                }
        400:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Bad Request"
                }
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "unauthorized"
                }
        503:
          body:
            application/json:
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Service Unavailable"
                }
    /notification:
      post:
        description: Stores a notification request from the users
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "datasourceTypeId" : { 
                    "type" : "number" 
                    }
                  },
                "required": ["datasourceTypeId"]
              }
            example:  |
              {
                "datasourceTypeId": 1
              }
        responses:
          201:
            body:
              application/json:
                example: |
                  {
                    "data": {"id":"1"},
                    "isSuccessful": true,
                    "message": ""
                  }
          400:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Bad Request"
                  }
          401:
            body:
              application/json: 
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "unauthorized"
                  }
          503:
            body:
              application/json:
                example: |
                  {
                    "data": [],
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }
/sdg:
  /installers:
    displayName: installers
    get:
      description: List of installers
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "installers": [{
                      "id": 6,
                      "os": "windows",
                      "osVersion": "Windows x64",
                      "fileName": "agent-windows-x64.exe"
                    },{
                      "id": 5,
                      "os": "windows",
                      "osVersion": "Windows x86",
                      "fileName": "agent-windows-x86.exe"
                    }, {
                      "id": 7,
                      "os": "mac",
                      "osVersion": "Mac OS X",
                      "fileName": "agent-osx.dmg"
                    }, {
                      "id": 3,
                      "os": "linux",
                      "osVersion": "Linux x64 (rpm)",
                      "fileName": "agent-linux-x64.rpm"
                    }, {
                      "id":4,
                      "os": "linux",
                      "osVersion": "Linux x64 (tar.gz)",
                      "fileName": "agent-linux-x64.tar.gz"
                    }, {
                      "id": 1,
                      "os": "linux",
                      "osVersion": "Linux x86 (rpm)",
                      "fileName": "agent-linux-x86.rpm"
                    }, {
                      "id": 2,
                      "os": "linux",
                      "osVersion": "Linux x86 (tar.gz)",
                      "fileName": "agent-linux-x86.tar.gz"
                    }]
                  },
                  "isSuccessful": true,
                  "message": ""
                }
  /agents:
    displayName: agents
    get:
      description: agents list for a given user
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "message": "",
                  "isSuccessful": "true",
                  "data": {
                    "count": 3,
                    "agents": [
                       {
                        "createdOn": "2015-04-29 16:09:20.0",
                        "agentId": 87,
                        "status": "disabled",
                        "description": "gru",
                        "userId": 5,
                        "installerId": 7,
                        "code": "n6XRx",
                        "createdOnTS": 1430323760
                      },
                      {
                        "createdOn": "2015-04-29 17:41:47.0",
                        "agentId": 88,
                        "status": "active",
                        "description": "bla",
                        "userId": 5,
                        "installerId": 7,
                        "code": "vPrdP",
                        "createdOnTS": 1430329307
                      },
                      {
                        "createdOn": "2015-04-29 18:32:33.0",
                        "agentId": 89,
                        "status": "disabled",
                        "description": "another test",
                        "userId": 5,
                        "installerId": 7,
                        "code": "wEglj",
                        "createdOnTS": 1430332353
                      }
                    ]
                  }
                } 
    post:
      description: Creates a new agent
      body:
        application/json:
          schema: agent
          example:  |
            {
              "description": "MacBook Pro - SF",
              "installerId": 7
            }
      responses:
        201:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "agentId": 5
                  },
                  "isSuccessful": true,
                  "message": ""
                }
    /{agentId}:
      put:
        description: Update an existing agent
        body:
          application/json:
            schema: agent
            example:  |
              {
                "description": "MacBook Pro - SF",
                "installerId": 7
              }
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": true,
                    "message": ""
                  }
          500:
            body:
              application/json:
                example: |
                  {
                    "data": {},
                    "isSuccessful": false,
                    "message": "Service Unavailable"
                  }
      /disable:
        post:    
          description: Allows to delete an agent
          responses:
            202:
              body:
                application/json:
                  example: |
                    {
                      "data": {},
                      "isSuccessful": true,
                      "message": ""
                    }
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    }  
      /package:
        displayName: package
        get:
          description: Download installer package
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "data": {
                        "code": "Aw32s",
                        "file": "--mock--"
                      },
                      "isSuccessful": true,
                      "message": ""
                    }
      /connectionStatus:
        displayName: Test Connection
        get:
          description: Test an agent's connectivity
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "data": {
                        "status": "active"
                        },
                      "isSuccessful": true,
                      "message": ""
                    }
            400:
              body:
                application/json: 
                  example: |
                    {
                      "data": {},
                      "isSuccessful": false,
                      "message": "Validation failed"
                    } 
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": {},
                      "isSuccessful": false,
                      "message": "You must login first"
                    }                    
    /validate:
      /name:
        displayName: validates the name for uniqueness  
        post:
          description: Validates the agent name
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "validate" : { 
                      "maxLength": 45,
                      "type" : "string" 
                      }
                    },
                  "required": ["validate"]  
                }
              example: |
                {
                  "validate": "Example Agent"
                }
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "data": {
                        "valid": true
                      },
                      "isSuccessful": true,
                      "message": ""
                    }
            400:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "Validation failed"
                    } 
            401:
              body:
                application/json: 
                  example: |
                    {
                      "data": [],
                      "isSuccessful": false,
                      "message": "You must login first"
                    } 
# ------------------------------------------------------
/demo/{name}:
  displayName: Demo endpoint
  get:
    description: Returns 200 if the demo gateway was successfully created
    queryParameters:
      uid:
        displayName: uid
        type: string
        description: uid
        example: SFDC443345FRGFZ00A
        minLength: 5
        required: true
    responses:
        200:
          body: 
            application/json:
              example: |            
                {
                  "message": "",
                  "isSuccessful": "true",
                  "data": {}
                }  
        400:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "Validation failed"
                } 
        401:
          body:
            application/json: 
              example: |
                {
                  "data": [],
                  "isSuccessful": false,
                  "message": "invalid userId"
                }           
        500: