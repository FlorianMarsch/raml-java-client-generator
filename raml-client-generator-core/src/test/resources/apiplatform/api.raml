#%RAML 0.8
title: API repository
mediaType: application/json
baseUri: https://anypoint.mulesoft.com/apiplatform/repository/v2
resourceTypes:
  - collection:
      get:
        description: Returns a list of elements
        responses:
          200:
            description:
            body:
              application/json:

      post:
        description: Creates a new element
        body:
          application/json:

        responses:
          201:
            description: The new element has been successfully created
  - writeOnlyCollection:
      post:
        description: Creates a new element
        body:
          application/json:
        responses:
          201:
            description: The new element has been successfully created

  - readOnlyCollection:
      get:
        description: Returns a list of elements
        responses:
          200:
            description:
            body:
              application/json:

  - collectionItem:
      description: An instance of a single element
      get:
        description: Returns an instance of a single element
        responses:
          200:
            body:
              application/json:
      put:
        description: Updates a single element
        body:
          application/json:
        responses:
          200:
            body:
              application/json:
      patch:
        description: Patches a single element
        body:
          application/json:
        responses:
          200:
            body:
              application/json:
      delete:
        description: Deletes the instance of the element specified
        responses:
          204:
            description: The element has been deleted successfully

traits:
  - searchable:
      queryParameters:
        offset:
          description: Skip over a number of elements by specifying an offset value for the query
          type: integer
          required: false
          example: 20
          minimum: 0
          maximum: 2147483647
          default: 0
        limit:
          description: Limit the number of elements on the response
          type: integer
          required: false
          example: 80
          default: 100
          minimum: 10
          maximum: 250
        sort:
          description: Property to sort by
          type: string
          required: false
          example: name
        ascending:
          description: Order for sorting
          type: boolean
          required: false
          example: true
        query:
          description: Search criteria
          type: string
          required: false
          example:

/public:
  /apis:
    type: readOnlyCollection
    get:
      description: Retrieves a list of APIs.
      is: [ searchable ]
      queryParameters:
        requireRaml:
          type: boolean
          description: Search only those APIs which have a publicly accesible RAML specification

# Admin endpoints
/organizations:
  description: Organizations are the container entity for all API Portal-related resources
  /active:
    get:
      description: Get the active organization
      responses:
        200:
          description: Successful
          body:
            application/json:

  /{organizationId}:
    description: The organization's data
    uriParameters:
      organizationId:
        type:     string
        pattern:  "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        required: true

    get:
      description: Get the organization
      queryParameters:
        extended:
          description: Obtain extended information from the organization
          type: boolean
          required: false
          example: true
          default: false
        resolveTheme:
          description: Resolves the theme inheritance
          type: boolean
          required: false
          example: true
          default: false
      responses:
        200:
          description: Successful
          body:
            application/json:
        400:
          description: Bad Request
        500:
          description: An unknown error occurred
    put:
      description: Update the organization
      body:
        application/json:
      responses:
        200:
          description: Successful
          body:
            application/json:
        400:
          description: Bad Request
        500:
          description: An unknown error occurred
    delete:
      description: Delete the organization
      responses:
        204:
          description: Organization deleted

    /permissions:
      type: readOnlyCollection
      description: A list of available permissions
      get:
        responses:
          200:
            body:
              application/json:

    /environments:
      type: readOnlyCollection
      description: A list of available environments to deploy to
      get:
        responses:
          200:
            body:
              application/json:

    /theme:
      put:
        description: Update the organization theme
        body:
          application/json:
      /default:
        get:
          description: Get the default theme for an organization
          body:
            application/json:

    /portals/terms:
      get:
        description: Gets portal terms set for the organization
        responses:
          200:
            body:
              application/json:
      put:
        description: Create portal terms for the organization
        body:
          application/json:
      delete:
        description: Deletes portal terms for the organization

    /apis:
      type: collection
      description: A collection of APIs
      get:
        description: Retrieves a list of APIs
        is: [ searchable ]
      post:
        description: Creates an API
        body:
          application/json:
          application/x-www-form-urlencoded:
            formParameters:
              file:
                description: The bundle or zip file to be imported
                type: file
      /by-name:
        get:
          description: |
            Returns a single api that matches the passed-in api name.
            Returns null if no match is found
          queryParameters:
            apiName:
              type: string
              required: true

      /versions/by-endpoint:
        type: readOnlyCollection
        get:
          description: |
            Returns a list of API versions for a given list of endpoints
          queryParameters:
            uris:
              type: string
              required: true
              repeat: true

      /versions/by-name:
        type: readOnlyCollection
        get:
          description: |
            Returns a single api that matches the passed-in api name and api version name.
            Returns null if no match is found
          queryParameters:
            apiName:
              type: string
              required: true
            versionName:
              type: string
              required: true

      /versions/tiers:
        type: readOnlyCollection
        get:
          description: |
            Returns permitted SLA tiers within an organization.
            It means every SLA tier that belongs to API version requesting user has access to

      /versions/contracts/applications:
        type: readOnlyCollection
        get:
          description: |
            Returns permitted applications within an organization.
            It means every applications that has a contract with an API version requesting user has access to

      /{apiId}:
        description: An API
        uriParameters:
          apiId:
            type: integer
            minimum: 1
            maximum: 2147483647
        get:
          description: Returns an API and all its versions
          responses:
            200:
              body:
                application/json:
        patch:
          body:
            application/json:
        delete:

        /portals:
          type: readOnlyCollection
          description: A collection of API portals
          get:
            description: Returns a collection of API portals
            responses:
              200:
                body:
                  application/json:

        /permissions:
          type: writeOnlyCollection
          post:
            description: Grant a user view access to this API
            body:
              application/json:

        /versions:
          description: A collection of API versions
          type: writeOnlyCollection
          post:
            description: Creates an API version
            body:
              application/json:
              application/x-www-form-urlencoded:
                formParameters:
                  file:
                    description: The bundle or zip file to be imported
                    type: file

          /{apiVersionId}:
            description: An API version
            type: collectionItem
            uriParameters:
              apiVersionId:
                type: integer
                minimum: 1
                maximum: 2147483647

            /export:
              get:
                description: |
                  Exports an API Version
                queryParameters:
                  files:
                    type: boolean
                    description: Include definition files
                    required: false
                  slaTiers:
                    type: boolean
                    description: Include SLA tiers
                    required: false
                  endpoint:
                    type: boolean
                    description: Include endpoint definition
                    required: false
                  portal:
                    type: boolean
                    description: Include portal
                    required: false
                  portalAttachments:
                    type: boolean
                    description: Include portal attachments
                    required: false
                  portalFiles:
                    type: boolean
                    description: Include portal images
                    required: false
                responses:
                  200:
                    body:
                      multipart/form-data:

            /users:
              type: readOnlyCollection
              description: |
                Proxy for core services that return users, with exception of API OWNER role and the current user
              get:
                description: Search for users
                queryParameters:
                  search:
                    type: string
                    required: true
                responses:
                  200:
                    body:
                      application/json:

              /by-roles:
                type: readOnlyCollection
                description: |
                  Proxy for core services that return users for a given set of roles and context parameters.
                  Users are returned with an extra "roles" property containing the core services id of the subset of passed-in roles of which they are a member
                get:
                  description: Search for users who match a specific set of roles
                  queryParameters:
                    API+VERSION+OWNER:
                      description: Context params for the API VERSION OWNER role
                      type: string
                      required: true
                    PORTAL+ACCESS:
                      description: Context params for the PORTAL ACCESS role
                      type: string
                      required: true
                  responses:
                    200:
                      body:
                        application/json:
              /owners:
                type: readOnlyCollection
                get:
                  description: |
                   Return all owners of an API version
                  responses:
                    200:
                      description: Successful
                      body:
                        application/json:

            /permissions:
              post:
                description: Grant a user admin access to this API version
                body:
                  application/json:
              delete:
                description: Revoke a user's admin access to this API version
                queryParameters:
                  userId:
                    type: string
                    required: true

            /portal:
              get:
                description: Obtain the portal associated with the API version
                queryParameters:
                  resolveTheme:
                    description: Resolves theme inheritance
                    type: boolean
                    required: false
                    default: false
              post:
                description: Create a portal and associates it with an API version
                body:
                  application/json:

              patch:
                description: Create a portal and associates it with an API version
                body:
                  application/json:

              /permissions:
                post:
                  description: Grant a user view access to this portal
                  body:
                    application/json:
                delete:
                  description: Revoke a user's view access to portal
                  queryParameters:
                    userId:
                      type: string
                      required: true

              /pages:
                description: A collection of portal pages
                type: writeOnlyCollection
                post:
                  description: Creates a page into the portal

                /{pageId}:
                  uriParameters:
                    pageId:
                      type: integer
                      minimum: 1
                      maximum: 2147483647
                  put:
                    description: Update an existing page
                    body:
                      application/json:
                  delete:

                  /widgets:
                    get:
                      description: Returns all content widgets of a page
                    patch:
                      description: Updates the collection of widgets
                      body:
                        application/json:

              /theme:
                put:
                  description: Update the portal theme
                  body:
                    application/json:

              /files:
                description: A collection of portal files
                type: writeOnlyCollection
                post:
                  description: Upload an api portal file
                  body:
                    application/x-www-form-urlencoded:
                      formParameters:
                        file:
                          description: The file to be uploaded
                          type: file

                /{fileId}:
                  delete:
                    description: Removes the Portal file
                    responses:
                      200:
                        description: Successful portal file deletion
                  get:
                    description: Gets the portal file
                    responses:
                      200:
                        description: Portal file stream
                  /{fileName}:
                    get:
                      description: |
                        Same as parent get but allows to set a file name in the content-disposition header for downloading in a browser environment

            /addRootRaml:
              post:
                description: Adds the root RAML for this API version
                body:
                  application/json:

            /definition:
              description: The fully resolved RAML spec for this version of the API
              get:
                description: Gets the RAML SPEC

            /endpoint:
              description: The endpoint associated with the API version
              get:
                description: Returns the endpoint associated with the API version
                responses:
                  200:
                    description: Successful
                  400:
                    description: Bad request
                  404:
                    description: No endpoint found for this API version
              post:
                description: Creates an endpoint for the API version
                body:
                  application/json:
                responses:
                  201:
                    description: The endpoint has been created
                    body:
                      application/json:
                  400:
                    description: Bad request
                  409:
                    description: The endpoint URL already exists
              put:
                description: Updates the endpoint associated with the API version
                body:
                  application/json:
                responses:
                  200:
                    description: The endpoint has been updated
                    body:
                      application/json:
                  409:
                    description: The endpoint URL already exists
              patch:
                description: Updates the endpoint associated with the API version
                body:
                  application/json:
              delete:
                description: Deletes the endpoint associated with the API version
                responses:
                  200:
                    description: The endpoint has been succesfully deleted

              /active:
                post:
                  description: Records activity for an API version
                  body:
                    application/json:
                  responses:
                    201:
                      description: The API version activity has been recorded
                      body:
                        application/json:

            /files:
              description: A collection of API version RAML files and directories
              type: collection

              /export:
                get:
                  description: Exports all files in the filesystem as a ZIP file
                  responses:
                    200:
                      body:
                        multipart/formdata:

              /{apiVersionFileId}:
                description: An API version RAML file (or directory)
                uriParameters:
                  apiVersionFileId:
                    type: integer
                    minimum: 1
                    maximum: 2147483647
                get:
                  description: Obtain a RAML file (or directory)
                  responses:
                    200:
                      body:
                        application/json:
                put:
                  body:
                    application/json:
                delete:

            /policies:
              description: A collection of API version policies
              type: collection
              get:
                queryParameters:
                  standalone:
                    type: boolean
                    default: true
                    required: false
                  version:
                    type: string
                    default: v1
                    required: false
                  fullInfo:
                    type: boolean
                    description: returns only basic information about the policy
                    default: true
                    required: false

              /{policyId}:
                description: An API version policy
                uriParameters:
                  policyId:
                    type: integer
                    minimum: 1
                    maximum: 2147483647
                delete:
                  description: Unapplies a policy

            /tags:
              description: Manages an API version tags
              /{tag}:
                uriParameters:
                  tag:
                    maxLength: 150
                post:
                  description: Adds a tag to an API version
                  body:
                    application/json:
                delete:
                  description: Removes a tag from an API version

            /tiers:
              description: Manages API version tiers
              type: collection
              get:
                description: Retrieves a list of tiers for the supplied api version
                is: [ searchable ]
                queryParameters:
                  active:
                    description: Retrieve only active tiers if set to true
                    type: boolean
                    required: false
                    example: true
              post:
                description: Creates a sla tier for the API version
                body:
                  application/json:

              /{tierId}:
                description: A particular tier associated with the API version
                put:
                  description: Update a tier associated with an API version
                  body:
                    application/json:
                delete:
                  description: Delete a tier that has no active applications

            /contracts:
              type: readOnlyCollection
              description: Contracts associated with the API version
              get:
                description: Retrieves a list of applications with contracts with the API version
                is: [ searchable ]

              /{contractId}:
                description: A particular contract associated with the API version
                get:
                  description: Retrieves a specific contract for the API version
                patch:
                  description: Patches contract conditions
                  body:
                    application/json:
                delete:
                  description: Deletes the contract

                /approveTierChange:
                  description: Approves contract tier change request
                  post:
                    body:
                      application/json:

                /approve:
                  description: Approves the contract
                  post:
                    body:
                      application/json:

                /reject:
                  description: Rejects the contract
                  post:
                    body:
                      application/json:

                /rejectTierChange:
                  description: Rejects contract tier change request
                  post:
                    body:
                      application/json:

                /restore:
                  description: Restores contract
                  post:
                    body:
                      application/json:

                /revoke:
                  description: Revokes contract
                  post:
                    body:
                      application/json:

            /proxy:
              description: Gets a proxy
              get:
                description: Gets a proxy
                responses:
                  200:
                    body:
                      application/zip:
              /deployment:
                post:
                  body:
                    application/json:
                patch:
                  body:
                    application/json:
                /status:
                  get:
                    description: Retrieves the deployment details of a version
                    body:
                      application/json:

    /policy-templates:
      description: |
        Policy Templates are the basis for creating new policies.
        The platform provides out of the box with several policies and new
        ones can be added by MuleSoft Support Team if needed
      get:
        description: Retrieve a list of policy templates
        responses:
          200:
            description: Successful
            body:
              application/json:

          400:
            description: Bad Request

          406:
            description: The requested accept type is not supported

          500:
            description: An unknown error occurred

      /{policyTemplateId}:
        uriParameters:
          policyTemplateId:
            type: integer
            minimum: 1
            maximum: 2147483647

        get:
          description: |
            Retrieve specific details from the policy template, including the full
            XML that is being injected as well as all of its configuration parameters
          responses:
            200:
              description: Successful
              body:
                application/json:

            400:
              description: Bad Request

            404:
              description: There is no policy template defined under the specified id

            406:
              description: The requested accept type is not supported

            500:
              description: An unknown error occurred

    /custom-policy-templates:
      description: |
        Custom Policy Templates are the basis for creating new policies.
        The platform provides out of the box with several policies and new
        ones can be added using this API
      type: collection

      get:
        description: Retrieves a list of custom policy templates
        is: [ searchable ]

      /{customPolicyTemplateId}:
        description: A custom policy template
        type: collectionItem
        uriParameters:
          customPolicyTemplateId:
            type: integer
            minimum: 1
            maximum: 2147483647

        /configuration:
          get:
            description: The XML configuration for the custom policy template
            responses:
              200:
                body:
                  application/xml:

        /definition:
          get:
            description: The YAML definition for the custom policy template
            responses:
              200:
                body:
                  application/yaml:

    /portals:
      description: A collection of API portals within organization
      type: collection

    /applications:
      description: A collection of applications that consume APIs via contracts
      type: collection

      get:
        description: Retrieves a list of applications
        is: [ searchable ]

      /{applicationId}:
        description: An application
        type: collectionItem
        uriParameters:
          applicationId:
            type: integer
            minimum: 1
            maximum: 2147483647

        /secret/reset:
          description: Resets client secret for application
          post:
            body:
              application/json:
            responses:
              201:
                body:
                  application/json:

        /party-ids:
          description: Party Ids associated with the application
          get:
            description: Retrieves a list of Party Ids for a specific api version
            queryParameters:
              apiVersionId:
                type: integer
                required: true

        /contracts:
          description: Contracts associated with the application
          type: collection

          get:
            description: Retrieves a list of applications with contracts with the application
            is: [ searchable ]

          post:
            description: Creates new contract between an API version and the application
            body:
              application/json:

          /{contractId}:
            description: A particular contract associated with the application

            get:
              description: Retrieves a specific contract for the application

            patch:
              description: Patches contract conditions
              body:
                application/json:

            delete:
              description: Deletes contract
              responses:
                204:
                  description: Contract deleted
                400:
                  description: Mandatory query string parameter not being provided
                404:
                  description: The contract cannot be found

    /contracts:
      get:
    #    description:|
    #      Returns a single contract (including application information and SLA tier), for a combination of API version ID and a Core Services application ID
        queryParameters:
          apiVersionId:
            type: integer
            required: true
          coreServicesId:
            type: string
            required: true
        responses:
          200:

    /deployment-targets:
      description: A collection of deploy targets for Hybrid deploymentTargets
      get:
        responses:
          200:
            body:
              application/json:

    # Public endpoints
    /public:
      /permissions:
        description: A list of available permissions
        get:
          responses:
            200:
              body:
                application/json:

      /portals:
        description: |
          A collection of API portals within organization. When performing a search by passing in 'query=foo' as a string, it is equivalent to passing in the following combination: 'query[name]=foo&query[version]=foo&query[description]=foo&query[tags]=foo&query[matchAll]=false'
        get:
          is: [searchable]
          queryParameters:
            requireRaml:
              type: boolean
              required: false
              default: true
            query[name]:
              type: string
              required: false
              description: |
                A list of keywords for matching API name in a search. Used in conjunction with other 'query[xxx]' to perform advanced search. Note: when any of 'query[xxx]' is used, the query parameter 'query' would be disregarded
            query[version]:
              type: string
              required: false
              description: |
                A list of keywords for matching API version name in a search. Used in conjunction with other 'query[xxx]' to perform advanced search. Note: when any of 'query[xxx]' is used, the query parameter 'query' would be disregarded
            query[tags]:
              type: string
              required: false
              description: |
                A list of keywords for matching API version tags in a search. Used in conjunction with other 'query[xxx]' to perform advanced search. Note: when any of 'query[xxx]' is used, the query parameter 'query' would be disregarded
            query[description]:
              type: string
              required: false
              description: |
                A list of keywords for matching API version description in a search. Used in conjunction with other 'query[xxx]' to perform advanced search. Note: when any of 'query[xxx]' is used, the query parameter 'query' would be disregarded
            query[matchAll]:
              type: boolean
              required: false
              default: false
              description: |
                A boolean value that determines how other 'query[xxx]' values should work together in an advanced search When 'matchAll' is true, all other 'query[xxx]' would be chained with an 'AND' when performing a search, otherwise they are chained with an 'OR' Note: when any of 'query[xxx]' is used, the query parameter 'query' would be disregarded
            organizationId:
              type: string
              required: false
              description: |
                The organization ID that the search should be run in. If not provided, search would be performed within the organization which the login user is under
            deep:
              type: boolean
              required: false
              default: false
              description: |
                A boolean value that, when set, would cause the search be perform on the organization associated with 'organizationId' param, as well as all the sub-organizations under it - as long as the login user has permission to view the content
        type: collection

        /terms:
          description: Portal terms for the organization
          get:
            responses:
              200:
                body:
                  application/json:

          /acceptance:
            description: Portal terms acceptance for the organization
            get:
              responses:
                200:
                  body:
                    application/json:

          /{portalTermsId}/acceptance:
            post:
              body:
                application/json:

      /apis/{apiId}:
        description: An API
        type: collectionItem
        uriParameters:
          apiId:
            type: integer
            minimum: 1
            maximum: 2147483647

        /versions/{apiVersionId}:
          description: An API version
          type: collectionItem
          uriParameters:
            apiVersionId:
              type: integer
              minimum: 1
              maximum: 2147483647

          /portal:
            get:

            /pages/{pageId}/widgets:
              get:

            /files/{fileId}:
              get:
                description: Retrieve the file by file id. Content-type will be set based on the content-type originally received
                responses:
                  200:
                    description: Successful
                  404:
                    description: Not Found

          /tiers:
            get:

          /definition:
            description: The fully resolved RAML spec for this version of the API
            type: collectionItem
            get:
              description: Gets the RAML SPEC

          /files:
            description: Serves RAML files for the portal
            get:
              description: Redirect to the root RAML file
              responses:
                302:
                  description: Temporary redirect to the root RAML file
                404:
                  description: No RAML file found

            /root:
              get:
                description: Retrieve the root RAML file contents
                responses:
                  200:
                    description: Successful
                  404:
                    description: Not Found

            /{fileName}:
              get:
                description: Retrieve the RAML contents by file name
                responses:
                  200:
                    description: Successful
                  404:
                    description: Not Found

# Cross Tenant endpoints
/policies:
  /{policyId}:
    description: An application
    type: collectionItem
    uriParameters:
      policyId:
        type: integer
        minimum: 1
        maximum: 2147483647
    get:
      responses:
        200:
          body:
            application/json:

/ch-domains/{domainName}:
  description: Returns information about the availability desired CH domain
  get:
    responses:
      200:
        body:
          application/json:
